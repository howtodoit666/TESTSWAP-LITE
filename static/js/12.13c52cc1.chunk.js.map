{"version":3,"sources":["src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/LPTokenSelect.tsx","src/hooks/useLPTokensState.tsx","src/components/Select.tsx","node_modules/eth-permit/dist/eth-permit.js","node_modules/eth-permit/dist/lib.js","node_modules/utf8/utf8.js","src/hooks/useSushiRoll.tsx","src/hooks/useMigrateState.tsx","src/screens/MigrateScreen.tsx"],"names":["InsufficientBalanceButton","symbol","t","useTranslation","title","disabled","ApproveButton","props","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","marginBottom","Spacing","tiny","LPTokenList","state","emptyText","Item","renderItem","item","key","selected","onSelectToken","setSelectedLPToken","data","lpTokens","sort","p1","p2","m1","multiplier","m2","apy","length","EmptyList","text","keyExtractor","style","margin","normal","textAlign","width","LPTokenItem","textMedium","useColors","balance","formatBalance","decimals","ITEM_SEPARATOR_HEIGHT","alignItems","tokenA","small","replaceWETH","tokenB","marginLeft","medium","caption","flex","light","color","LPTokenSelect","expanded","selectedLPToken","onExpand","updatingLPTokens","useLPTokensState","mode","useTokenPairState","provider","tokens","lastTimeRefreshed","setLastTimeRefreshed","setLPTokens","selectedLPTokenAllowed","setSelectedLPTokenAllowed","pair","setPair","amount","setAmount","getPair","useSDK","updateLPTokens","fetchMyPools","fetchPools","fetchMyLPTokens","fetchMyUniswapLPTokens","useEffect","useAsyncEffect","undefined","useDelayedOnBlockEffect","block","fromToken","toToken","updateLastTimeRefreshed","Date","now","paddingLeft","paddingRight","selectable","setOption","option","fontWeight","note","marginTop","description","Select","options","map","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","signERC2612Permit","signDaiPermit","rpc_1","lib_1","MAX_INT","EIP712Domain","name","type","zeros","numZeros","padEnd","getTokenName","hexToUtf8","call","substr","getDomain","tokenAddress","chainId","all","getChainId","version","verifyingContract","holder","expiry","nonce","message","allowed","typedData","domain","types","Permit","primaryType","createTypedDaiData","sig","signData","assign","owner","deadline","createTypedERC2612Data","__importDefault","mod","__esModule","utf8_1","hex","str","code","l","replace","split","reverse","join","i","parseInt","String","fromCharCode","default","decode","root","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","charCodeAt","push","checkScalarValue","codePoint","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","encode","codePoints","index","byteString","tmp","array","ucs2encode","useSushiRoll","ethereum","migrate","lpToken","signer","sushiRoll","getContract","SUSHI_ROLL","Math","floor","getTime","args","ethers","constants","Zero","estimateGas","gasLimit","mul","div","logTransaction","arg","migrateWithPermit","getAddress","permit","v","r","s","useMigrateState","getTokenAllowance","updateTokens","setMode","migrating","setMigrating","isWalletConnect","minAllowance","BigNumber","from","pow","sub","allowance","gte","onMigrate","parseBalance","func","Migrate","ChangeNetwork","View","large","Border","MigrateModeSelect","find","UniswapLiquidityScreen","Heading","AmountInput","TokenInput","onAmountChanged","AmountInfo","isEmptyValue","InfoBox","Meta","label","Controls","error","setError","gt","FetchingButton","ErrorMessage","MigrateButton","goToFarm","useLinker","Button","MigrateScreen","Screen","Container","BackgroundImage","Content","Title","Text","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/12.13c52cc1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Button from \"./Button\";\r\n\r\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\r\n    const t = useTranslation();\r\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\r\n};\r\nexport default InsufficientBalanceButton;\r\n","import React, { FC, useCallback, useContext, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport Button from \"./Button\";\r\n\r\nexport interface ApproveButtonProps {\r\n    token: Token;\r\n    spender: string;\r\n    onSuccess: () => void;\r\n    onError: (e) => void;\r\n    hidden?: boolean;\r\n}\r\n\r\nconst ApproveButton: FC<ApproveButtonProps> = props => {\r\n    const t = useTranslation();\r\n    const { approveToken } = useContext(EthersContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const onPress = useCallback(async () => {\r\n        if (props.token) {\r\n            props.onError({});\r\n            setLoading(true);\r\n            try {\r\n                const tx = await approveToken(props.token.address, props.spender);\r\n                if (tx) {\r\n                    await tx.wait();\r\n                    props.onSuccess();\r\n                }\r\n            } catch (e) {\r\n                props.onError(e);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [props.token]);\r\n    if (props.hidden) return <View />;\r\n    return (\r\n        <Button\r\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\r\n            onPress={onPress}\r\n            loading={loading}\r\n            containerStyle={{ marginBottom: Spacing.tiny }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ApproveButton;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { FlatList, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport { formatBalance } from \"../utils\";\r\nimport CloseIcon from \"./CloseIcon\";\r\nimport Expandable from \"./Expandable\";\r\nimport FlexView from \"./FlexView\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Loading from \"./Loading\";\r\nimport Selectable from \"./Selectable\";\r\nimport SelectIcon from \"./SelectIcon\";\r\nimport Text from \"./Text\";\r\nimport TokenLogo from \"./TokenLogo\";\r\n\r\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\r\n\r\nexport interface LPTokenSelectProps {\r\n    state: LPTokensState;\r\n    title: string;\r\n    emptyText: string;\r\n    Item: FC<LPTokenItemProps>;\r\n    style?: ViewStyle;\r\n}\r\n\r\nexport interface LPTokenItemProps {\r\n    token: LPToken;\r\n    selected: boolean;\r\n    onSelectToken: (token: LPToken) => void;\r\n}\r\n\r\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\r\n    const onUnselectToken = () => props.state.setSelectedLPToken();\r\n    return (\r\n        <View style={props.style}>\r\n            <Expandable\r\n                title={props.title}\r\n                expanded={!props.state.selectedLPToken}\r\n                onExpand={() => props.state.setSelectedLPToken()}>\r\n                <LPTokenList state={props.state} emptyText={props.emptyText} Item={props.Item} />\r\n            </Expandable>\r\n            {props.state.selectedLPToken && (\r\n                <props.Item token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst LPTokenList = ({\r\n    state,\r\n    emptyText,\r\n    Item\r\n}: {\r\n    state: LPTokensState;\r\n    emptyText: string;\r\n    Item: FC<LPTokenItemProps>;\r\n}) => {\r\n    const renderItem = useCallback(\r\n        ({ item }) => {\r\n            return <Item key={item.symbol} token={item} selected={false} onSelectToken={state.setSelectedLPToken} />;\r\n        },\r\n        [state.setSelectedLPToken]\r\n    );\r\n    const data = state.lpTokens.sort((p1, p2) => {\r\n        const m1 = p1.multiplier || 0;\r\n        const m2 = p2.multiplier || 0;\r\n        return m1 === m2 ? (p2.apy || 0) - (p1.apy || 0) : m2 - m1;\r\n    });\r\n    return state.loading ? (\r\n        <Loading />\r\n    ) : data.length === 0 ? (\r\n        <EmptyList text={emptyText} />\r\n    ) : (\r\n        <FlatList keyExtractor={item => item.symbol} data={data} renderItem={renderItem} />\r\n    );\r\n};\r\n\r\nconst EmptyList = ({ text }: { text: string }) => {\r\n    return (\r\n        <View style={{ margin: Spacing.normal }}>\r\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                {text}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\r\n    const { textMedium } = useColors();\r\n    const balance = formatBalance(props.token.balance, props.token.decimals, 6);\r\n    const onPress = useCallback(() => {\r\n        props.onSelectToken(props.token);\r\n    }, [props.onSelectToken, props.token]);\r\n    return (\r\n        <Selectable\r\n            selected={props.selected}\r\n            onPress={onPress}\r\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\r\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\r\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\r\n                    {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\r\n                </Text>\r\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\r\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\r\n                        {balance}\r\n                    </Text>\r\n                </View>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport default LPTokenSelect;\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Pair } from \"@sushiswap/sdk\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport { fetchMyLPTokens, fetchMyPools, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\r\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\r\nimport useSDK from \"./useSDK\";\r\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\r\n\r\nexport interface LPTokensState extends TokenPairState {\r\n    updateLPTokens: () => Promise<void>;\r\n    lastTimeRefreshed: number;\r\n    updateLastTimeRefreshed: () => void;\r\n    lpTokens: LPToken[];\r\n    selectedLPToken?: LPToken;\r\n    setSelectedLPToken: (token?: LPToken) => void;\r\n    selectedLPTokenAllowed: boolean;\r\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\r\n    pair?: Pair;\r\n    amount: string;\r\n    setAmount: (amount: string) => void;\r\n}\r\n\r\ntype Mode = \"pools\" | \"my-pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\r\n\r\nlet updatingLPTokens = false;\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\r\n    const state = useTokenPairState();\r\n    const { provider, address, tokens } = useContext(EthersContext);\r\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\r\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\r\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\r\n    const [pair, setPair] = useState<Pair>();\r\n    const [amount, setAmount] = useState(\"\");\r\n    const { getPair } = useSDK();\r\n\r\n    const updateLPTokens = async () => {\r\n        if (address && provider && tokens.length > 0 && !updatingLPTokens) {\r\n            try {\r\n                updatingLPTokens = true;\r\n                const data = await (mode === \"my-pools\"\r\n                    ? fetchMyPools(address, tokens, provider)\r\n                    : mode === \"pools\"\r\n                    ? fetchPools(address, tokens, provider)\r\n                    : mode === \"my-lp-tokens\"\r\n                    ? fetchMyLPTokens(address, tokens, provider)\r\n                    : fetchMyUniswapLPTokens(address, tokens, provider));\r\n                if (data) {\r\n                    setLPTokens(data);\r\n                }\r\n            } finally {\r\n                updatingLPTokens = false;\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!selectedLPToken) {\r\n            setAmount(\"\");\r\n        }\r\n    }, [selectedLPToken]);\r\n\r\n    useAsyncEffect(async () => {\r\n        setLoading(true);\r\n        setPair(undefined);\r\n        if (selectedLPToken && provider) {\r\n            try {\r\n                setPair(await getPair(selectedLPToken.tokenA, selectedLPToken.tokenB, provider));\r\n            } catch (e) {\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, [selectedLPToken, provider]);\r\n\r\n    useDelayedOnBlockEffect(\r\n        async block => {\r\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\r\n                if (!block) {\r\n                    setLoading(true);\r\n                }\r\n                await updateLPTokens();\r\n            }\r\n        },\r\n        () => \"updateLPTokens()\",\r\n        [tokens.length, address, lastTimeRefreshed],\r\n        0\r\n    );\r\n\r\n    return {\r\n        ...state,\r\n        fromToken: state.fromToken || selectedLPToken?.tokenA,\r\n        toToken: state.toToken || selectedLPToken?.tokenB,\r\n        updateLPTokens,\r\n        loading: state.loading || loading,\r\n        lastTimeRefreshed,\r\n        updateLastTimeRefreshed: () => {\r\n            setLastTimeRefreshed(Date.now());\r\n        },\r\n        lpTokens,\r\n        selectedLPToken,\r\n        setSelectedLPToken,\r\n        selectedLPTokenAllowed,\r\n        setSelectedLPTokenAllowed,\r\n        pair,\r\n        amount,\r\n        setAmount\r\n    };\r\n};\r\n\r\nexport default useLPTokensState;\r\n","import React, { FC } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport CloseIcon from \"./CloseIcon\";\r\nimport Expandable from \"./Expandable\";\r\nimport FlexView from \"./FlexView\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Selectable from \"./Selectable\";\r\nimport SelectIcon from \"./SelectIcon\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface Option {\r\n    key: string;\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SelectProps {\r\n    title: string;\r\n    options: Option[];\r\n    option?: Option;\r\n    setOption: (option?: Option) => void;\r\n}\r\n\r\nconst Select: FC<SelectProps> = props => {\r\n    return (\r\n        <View>\r\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\r\n                {props.options.map(option => (\r\n                    <Item\r\n                        key={option.key}\r\n                        option={option}\r\n                        setOption={props.setOption}\r\n                        selected={option.key === props.option?.key}\r\n                    />\r\n                ))}\r\n            </Expandable>\r\n            {props.option && (\r\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst Item = (props: {\r\n    option: Option;\r\n    setOption?: (option?: Option) => void;\r\n    selected: boolean;\r\n    selectable?: boolean;\r\n}) => {\r\n    return (\r\n        <Selectable\r\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\r\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\r\n            selected={props.selected}\r\n            disabled={props.selectable}\r\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\r\n                    <Text note={true} style={{ marginTop: 4 }}>\r\n                        {props.option.description}\r\n                    </Text>\r\n                </View>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signERC2612Permit = exports.signDaiPermit = void 0;\nconst rpc_1 = require(\"./rpc\");\nconst lib_1 = require(\"./lib\");\nconst MAX_INT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\nconst createTypedDaiData = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"holder\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"expiry\", type: \"uint256\" },\n                { name: \"allowed\", type: \"bool\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst createTypedERC2612Data = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"owner\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"value\", type: \"uint256\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"deadline\", type: \"uint256\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst NONCES_FN = '0x7ecebe00';\nconst NAME_FN = '0x06fdde03';\nconst zeros = (numZeros) => ''.padEnd(numZeros, '0');\nconst getTokenName = (provider, address) => __awaiter(void 0, void 0, void 0, function* () { return lib_1.hexToUtf8((yield rpc_1.call(provider, address, NAME_FN)).substr(130)); });\nconst getDomain = (provider, token) => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof token !== 'string') {\n        return token;\n    }\n    const tokenAddress = token;\n    const [name, chainId] = yield Promise.all([\n        getTokenName(provider, tokenAddress),\n        rpc_1.getChainId(provider),\n    ]);\n    const domain = { name, version: '1', chainId, verifyingContract: tokenAddress };\n    return domain;\n});\nexports.signDaiPermit = (provider, token, holder, spender, expiry, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        holder,\n        spender,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${holder.substr(2)}`)),\n        expiry: expiry || MAX_INT,\n        allowed: true,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedDaiData(message, domain);\n    const sig = yield rpc_1.signData(provider, holder, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\nexports.signERC2612Permit = (provider, token, owner, spender, value = MAX_INT, deadline, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        owner,\n        spender,\n        value,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${owner.substr(2)}`)),\n        deadline: deadline || MAX_INT,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedERC2612Data(message, domain);\n    const sig = yield rpc_1.signData(provider, owner, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToUtf8 = void 0;\nconst utf8_1 = __importDefault(require(\"utf8\"));\nexports.hexToUtf8 = function (hex) {\n    // if (!isHexStrict(hex))\n    //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n    let str = \"\";\n    let code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    let l = hex.length;\n    for (let i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8_1.default.decode(str);\n};\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","import { useCallback, useContext } from \"react\";\r\n\r\nimport { signERC2612Permit } from \"eth-permit\";\r\nimport { ethers } from \"ethers\";\r\nimport { SUSHI_ROLL } from \"../constants/contracts\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport { getContract } from \"../utils\";\r\nimport { logTransaction } from \"../utils/analytics-utils\";\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useSushiRoll = () => {\r\n    const { ethereum } = useContext(EthersContext);\r\n    const ttl = 60 * 20;\r\n\r\n    const migrate = useCallback(\r\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\r\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\r\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\r\n            const args = [\r\n                lpToken.tokenA.address,\r\n                lpToken.tokenB.address,\r\n                amount,\r\n                ethers.constants.Zero,\r\n                ethers.constants.Zero,\r\n                deadline\r\n            ];\r\n            const gasLimit = await sushiRoll.estimateGas.migrate(...args);\r\n            const tx = await sushiRoll.migrate(...args, {\r\n                gasLimit: gasLimit.mul(120).div(100)\r\n            });\r\n            return logTransaction(tx, \"SushiRoll.migrate()\", ...args.map(arg => arg.toString()));\r\n        },\r\n        [ethereum]\r\n    );\r\n\r\n    const migrateWithPermit = useCallback(\r\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\r\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\r\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\r\n            const permit = await signERC2612Permit(\r\n                ethereum,\r\n                lpToken.address,\r\n                await signer.getAddress(),\r\n                SUSHI_ROLL,\r\n                amount.toString(),\r\n                deadline\r\n            );\r\n            const args = [\r\n                lpToken.tokenA.address,\r\n                lpToken.tokenB.address,\r\n                amount,\r\n                ethers.constants.Zero,\r\n                ethers.constants.Zero,\r\n                deadline,\r\n                permit.v,\r\n                permit.r,\r\n                permit.s\r\n            ];\r\n            const gasLimit = await sushiRoll.estimateGas.migrateWithPermit(...args);\r\n            const tx = await sushiRoll.migrateWithPermit(...args, {\r\n                gasLimit: gasLimit.mul(120).div(100)\r\n            });\r\n            return logTransaction(tx, \"SushiRoll.migrateWithPermit()\", ...args.map(arg => arg.toString()));\r\n        },\r\n        [ethereum]\r\n    );\r\n\r\n    return {\r\n        migrate,\r\n        migrateWithPermit\r\n    };\r\n};\r\n\r\nexport default useSushiRoll;\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport { SUSHI_ROLL } from \"../constants/contracts\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport { parseBalance } from \"../utils\";\r\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\r\nimport useSushiRoll from \"./useSushiRoll\";\r\n\r\nexport type MigrateMode = \"permit\" | \"approve\";\r\n\r\nexport interface MigrateState extends LPTokensState {\r\n    mode?: MigrateMode;\r\n    setMode: (_mode?: MigrateMode) => void;\r\n    onMigrate: () => Promise<void>;\r\n    migrating: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useMigrateState: () => MigrateState = () => {\r\n    const { ethereum } = useContext(EthersContext);\r\n    const state = useLPTokensState(\"my-uniswap-lp-tokens\");\r\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\r\n    const { migrate, migrateWithPermit } = useSushiRoll();\r\n    const [loading, setLoading] = useState(false);\r\n    const [mode, setMode] = useState<MigrateMode>();\r\n    const [migrating, setMigrating] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (ethereum?.isWalletConnect) {\r\n            setMode(\"approve\");\r\n        } else {\r\n            setMode(undefined);\r\n        }\r\n    }, [ethereum]);\r\n\r\n    useEffect(() => {\r\n        state.setSelectedLPToken();\r\n    }, [mode]);\r\n\r\n    useAsyncEffect(async () => {\r\n        if (provider && signer && state.selectedLPToken) {\r\n            setLoading(true);\r\n            state.setSelectedLPTokenAllowed(false);\r\n            try {\r\n                const minAllowance = ethers.BigNumber.from(2)\r\n                    .pow(96)\r\n                    .sub(1);\r\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, SUSHI_ROLL);\r\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [provider, signer, state.selectedLPToken]);\r\n\r\n    const onMigrate = useCallback(async () => {\r\n        if (mode && state.selectedLPToken && state.amount && provider && signer) {\r\n            setMigrating(true);\r\n            try {\r\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\r\n                const func = mode === \"approve\" ? migrate : migrateWithPermit;\r\n                const tx = await func(state.selectedLPToken, amount, signer);\r\n                await tx.wait();\r\n                await updateTokens();\r\n                await state.updateLPTokens();\r\n                state.setSelectedLPToken(undefined);\r\n            } finally {\r\n                setMigrating(false);\r\n            }\r\n        }\r\n    }, [mode, state.selectedLPToken, state.amount, provider, signer, migrateWithPermit, updateTokens]);\r\n\r\n    return {\r\n        ...state,\r\n        loading: state.loading || loading,\r\n        mode,\r\n        setMode,\r\n        onMigrate,\r\n        migrating\r\n    };\r\n};\r\n\r\nexport default useMigrateState;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Platform, View } from \"react-native\";\r\n\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport ApproveButton from \"../components/ApproveButton\";\r\nimport BackgroundImage from \"../components/BackgroundImage\";\r\nimport Border from \"../components/Border\";\r\nimport Button from \"../components/Button\";\r\nimport ChangeNetwork from \"../components/ChangeNetwork\";\r\nimport Container from \"../components/Container\";\r\nimport Content from \"../components/Content\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport FetchingButton from \"../components/FetchingButton\";\r\nimport Heading from \"../components/Heading\";\r\nimport InfoBox from \"../components/InfoBox\";\r\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\r\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\r\nimport Meta from \"../components/Meta\";\r\nimport Select, { Option } from \"../components/Select\";\r\nimport Text from \"../components/Text\";\r\nimport Title from \"../components/Title\";\r\nimport TokenInput from \"../components/TokenInput\";\r\nimport WebFooter from \"../components/web/WebFooter\";\r\nimport { MigrateSubMenu } from \"../components/web/WebSubMenu\";\r\nimport { SUSHI_ROLL } from \"../constants/contracts\";\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useLinker from \"../hooks/useLinker\";\r\nimport useMigrateState, { MigrateMode, MigrateState } from \"../hooks/useMigrateState\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport MetamaskError from \"../types/MetamaskError\";\r\nimport { isEmptyValue, parseBalance } from \"../utils\";\r\nimport Screen from \"./Screen\";\r\n\r\nconst MigrateScreen = () => {\r\n    const t = useTranslation();\r\n    return (\r\n        <Screen>\r\n            <Container>\r\n                <BackgroundImage />\r\n                <Content>\r\n                    <Title text={t(\"migrate-liquidity\")} />\r\n                    <Text light={true}>{t(\"migrate-liquidity-desc\")}</Text>\r\n                    <Migrate />\r\n                </Content>\r\n                {Platform.OS === \"web\" && <WebFooter />}\r\n            </Container>\r\n            <MigrateSubMenu />\r\n        </Screen>\r\n    );\r\n};\r\n\r\nconst Migrate = () => {\r\n    const { ethereum, chainId } = useContext(EthersContext);\r\n    const state = useMigrateState();\r\n    if (chainId !== 1) return <ChangeNetwork />;\r\n    return (\r\n        <View style={{ marginTop: Spacing.large }}>\r\n            {!ethereum?.isWalletConnect && (\r\n                <>\r\n                    <MigrateModeSelect state={state} />\r\n                    <Border />\r\n                </>\r\n            )}\r\n            <UniswapLiquidityScreen state={state} />\r\n            <Border />\r\n            <AmountInput state={state} />\r\n            <AmountInfo state={state} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MigrateModeSelect = ({ state }: { state: MigrateState }) => {\r\n    const t = useTranslation();\r\n    const options: Option[] = [\r\n        {\r\n            key: \"permit\",\r\n            title: t(\"non-hardware-wallet\"),\r\n            description: t(\"non-hardware-wallet-desc\")\r\n        },\r\n        {\r\n            key: \"approve\",\r\n            title: t(\"hardware-wallet\"),\r\n            description: t(\"hardware-wallet-desc\")\r\n        }\r\n    ];\r\n    return (\r\n        <Select\r\n            title={t(\"wallet-type\")}\r\n            options={options}\r\n            option={options.find(option => option.key === state.mode)}\r\n            setOption={option => state.setMode(option?.key as MigrateMode | undefined)}\r\n        />\r\n    );\r\n};\r\n\r\nconst UniswapLiquidityScreen = ({ state }: { state: MigrateState }) => {\r\n    const t = useTranslation();\r\n    if (!state.mode) {\r\n        return <Heading text={t(\"your-uniswap-liquidity\")} disabled={true} />;\r\n    }\r\n    return (\r\n        <LPTokenSelect\r\n            state={state}\r\n            title={t(\"your-uniswap-liquidity\")}\r\n            emptyText={t(\"you-dont-have-any-liquidity-on-uniswap\")}\r\n            Item={LPTokenItem}\r\n        />\r\n    );\r\n};\r\n\r\nconst AmountInput = ({ state }: { state: MigrateState }) => {\r\n    const t = useTranslation();\r\n    if (!state.selectedLPToken) {\r\n        return <Heading text={t(\"amount-of-tokens\")} disabled={true} />;\r\n    }\r\n    return (\r\n        <TokenInput\r\n            title={t(\"amount-of-tokens\")}\r\n            token={state.selectedLPToken}\r\n            amount={state.amount}\r\n            onAmountChanged={state.setAmount}\r\n        />\r\n    );\r\n};\r\n\r\nconst AmountInfo = ({ state }: { state: MigrateState }) => {\r\n    const disabled = !state.selectedLPToken || isEmptyValue(state.amount);\r\n    return (\r\n        <InfoBox>\r\n            <Meta label={state.selectedLPToken?.symbol || \"SushiSwap LP\"} text={state.amount} disabled={disabled} />\r\n            <Controls state={state} />\r\n        </InfoBox>\r\n    );\r\n};\r\n\r\nconst Controls = ({ state }: { state: MigrateState }) => {\r\n    const [error, setError] = useState<MetamaskError>({});\r\n    useAsyncEffect(() => setError({}), [state.amount]);\r\n    return (\r\n        <View style={{ marginTop: Spacing.normal }}>\r\n            {!state.selectedLPToken || isEmptyValue(state.amount) ? (\r\n                <MigrateButton state={state} onError={setError} disabled={true} />\r\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\r\n            ) : state.loading ? (\r\n                <FetchingButton />\r\n            ) : (\r\n                <>\r\n                    {state.mode === \"approve\" && !state.selectedLPTokenAllowed && (\r\n                        <ApproveButton\r\n                            token={state.selectedLPToken}\r\n                            spender={SUSHI_ROLL}\r\n                            onSuccess={() => state.setSelectedLPTokenAllowed(true)}\r\n                            onError={setError}\r\n                        />\r\n                    )}\r\n                    <MigrateButton\r\n                        state={state}\r\n                        onError={setError}\r\n                        disabled={state.mode === \"approve\" && !state.selectedLPTokenAllowed}\r\n                    />\r\n                </>\r\n            )}\r\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MigrateButton = ({\r\n    state,\r\n    onError,\r\n    disabled\r\n}: {\r\n    state: MigrateState;\r\n    onError: (e) => void;\r\n    disabled: boolean;\r\n}) => {\r\n    const t = useTranslation();\r\n    const goToFarm = useLinker(\"/farming\", \"Farming\");\r\n    const onPress = async () => {\r\n        onError({});\r\n        try {\r\n            await state.onMigrate();\r\n            goToFarm();\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    };\r\n    return <Button title={t(\"migrate-liquidity\")} loading={state.migrating} onPress={onPress} disabled={disabled} />;\r\n};\r\n\r\nexport default MigrateScreen;\r\n"],"sourceRoot":""}