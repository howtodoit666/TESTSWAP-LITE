{"version":3,"sources":["src/components/Heading.tsx","src/components/ItemSeparator.tsx","src/components/Selectable.tsx","src/components/TokenLogo.tsx","src/components/Border.tsx","src/components/ChangeNetwork.tsx","src/components/CloseIcon.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/SelectIcon.tsx","src/components/Expandable.tsx","src/components/FetchingButton.tsx","src/components/Loading.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/Input.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useWeth.tsx","src/hooks/useTokenPairState.tsx","assets/empty-token.png","assets/ETH.png","index.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","ITEM_SEPARATOR_HEIGHT","ItemSeparator","Selectable","borderDark","overlay","border","useStyles","background","backgroundLight","containerStyle","hovered","activeOpacity","underlayColor","selected","backgroundColor","TokenLogo","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","borderRadius","onError","opacity","Border","marginTop","ChangeNetwork","chainId","t","useTranslation","networkName","1","42","justifyContent","light","textAlign","marginVertical","large","CloseIcon","name","marginLeft","ErrorMessage","borderColor","borderWidth","padding","code","note","message","InfoBox","darkMode","useContext","GlobalContext","normal","SelectIcon","Expandable","expanded","setExpanded","shouldExpand","undefined","onExpand","display","children","FetchingButton","Loading","Meta","textMedium","textLight","useLinker","url","suffix","label","textDecorationLine","MaxButton","onPressMax","useCallback","balance","isETH","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","Platform","OS","maxButtonText","symbol","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","keyboardType","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","Input","textDark","errors","forbidden","forEach","validation","match","regexp","push","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","EthersContext","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useWeth","wrapETH","signer","a","async","weth","getContract","WETH","address","estimateGas","deposit","gasLimit","tx","logTransaction","unwrapETH","withdraw","useTokenPairState","tokens","updateTokens","getTokenAllowance","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","loading","setLoading","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","wait","onUnwrap","module","exports","isServer","process","hoverListener","hasMouse","window","refs","mousePosition","x","y","hover","target","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState"],"mappings":"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","file":"static/js/0.da7bb1e0.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport Button from \"./Button\";\r\nimport FlexView from \"./FlexView\";\r\nimport Text from \"./Text\";\r\n\r\ninterface HeadingProps {\r\n    text: string;\r\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\r\n    disabled?: boolean;\r\n    buttonText?: string;\r\n    onPressButton?: () => void | Promise<void>;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst Heading: FC<HeadingProps> = props => {\r\n    const { accent } = useColors();\r\n    return (\r\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\r\n            <Text\r\n                medium={true}\r\n                fontWeight={props.fontWeight || \"bold\"}\r\n                disabled={props.disabled}\r\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\r\n                {props.text}\r\n            </Text>\r\n            {props.buttonText && (\r\n                <Button\r\n                    type={\"clear\"}\r\n                    size={\"small\"}\r\n                    title={props.buttonText}\r\n                    onPress={props.onPressButton}\r\n                    color={accent}\r\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\r\n                />\r\n            )}\r\n        </FlexView>\r\n    );\r\n};\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nexport const ITEM_SEPARATOR_HEIGHT = 10;\r\n\r\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\r\n\r\nexport default ItemSeparator;\r\n","import React, { FC } from \"react\";\r\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\r\nimport { Hoverable } from \"react-native-web-hover\";\r\n\r\nimport useColors from \"../hooks/useColors\";\r\nimport useStyles from \"../hooks/useStyles\";\r\n\r\nexport interface SelectableProps extends ViewProps {\r\n    selected: boolean;\r\n    onPress?: () => void;\r\n    disabled?: boolean;\r\n    containerStyle?: ViewStyle;\r\n}\r\n\r\nconst Selectable: FC<SelectableProps> = props => {\r\n    const { borderDark, accent, overlay } = useColors();\r\n    const { border } = useStyles();\r\n    const { background, backgroundLight } = useColors();\r\n    return (\r\n        <Hoverable style={props.containerStyle}>\r\n            {({ hovered }) => (\r\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\r\n                    <View\r\n                        {...props}\r\n                        style={[\r\n                            {\r\n                                ...border({ color: props.selected ? accent : borderDark }),\r\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\r\n                            },\r\n                            props.style\r\n                        ]}\r\n                    />\r\n                </TouchableHighlight>\r\n            )}\r\n        </Hoverable>\r\n    );\r\n};\r\n\r\nexport default Selectable;\r\n","import React, { useState } from \"react\";\r\nimport { Image, View, ViewStyle } from \"react-native\";\r\n\r\nimport useColors from \"../hooks/useColors\";\r\nimport Token from \"../types/Token\";\r\nimport { isWETH } from \"../utils\";\r\n\r\nconst TokenLogo = (props: {\r\n    token: Token;\r\n    small?: boolean;\r\n    replaceWETH?: boolean;\r\n    disabled?: boolean;\r\n    style?: ViewStyle;\r\n}) => {\r\n    const { backgroundLight: disabled } = useColors();\r\n    const [error, setError] = useState(false);\r\n    const size = props.small ? 22 : 27;\r\n    const placeholder = require(\"../../assets/empty-token.png\");\r\n    const ETH = require(\"../../assets/ETH.png\");\r\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\r\n    return (\r\n        <View\r\n            style={[\r\n                {\r\n                    width: size,\r\n                    height: size,\r\n                    backgroundColor: props.disabled ? disabled : \"white\",\r\n                    borderRadius: size / 2\r\n                },\r\n                props.style\r\n            ]}>\r\n            <Image\r\n                source={!props.token.logoURI || error ? placeholder : source}\r\n                onError={() => setError(true)}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    borderRadius: size / 2,\r\n                    opacity: props.disabled ? 0.5 : 1\r\n                }}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default TokenLogo;\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\n\r\nconst Border = props => {\r\n    const { border } = useColors();\r\n    return (\r\n        <View\r\n            style={{\r\n                height: 1,\r\n                width: \"100%\",\r\n                backgroundColor: border,\r\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\r\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Border;\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Text from \"./Text\";\r\n\r\nconst ChangeNetwork = ({ chainId = 1 }) => {\r\n    const t = useTranslation();\r\n    const networkName = {\r\n        1: \"Mainnet\",\r\n        42: \"Kovan\"\r\n    }[chainId];\r\n    return (\r\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n            <Text light={true} style={{ textAlign: \"center\", marginVertical: Spacing.large }}>\r\n                {t(\"change-network-to\", { networkName })}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ChangeNetwork;\r\n","import React from \"react\";\r\nimport { Icon } from \"react-native-elements\";\r\n\r\nimport useColors from \"../hooks/useColors\";\r\n\r\nconst CloseIcon = () => {\r\n    const { accent } = useColors();\r\n    return <Icon type={\"material-community\"} name={\"close\"} color={accent} style={{ marginLeft: 4 }} />;\r\n};\r\n\r\nexport default CloseIcon;\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport MetamaskError from \"../types/MetamaskError\";\r\nimport Text from \"./Text\";\r\n\r\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\r\n    <View\r\n        style={{\r\n            borderColor: \"red\",\r\n            borderWidth: 1,\r\n            width: \"100%\",\r\n            padding: Spacing.tiny,\r\n            marginTop: Spacing.small\r\n        }}>\r\n        {error.code && (\r\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\r\n                Error Code {error.code}\r\n            </Text>\r\n        )}\r\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\r\n            {error.message}\r\n        </Text>\r\n    </View>\r\n);\r\n\r\nexport default ErrorMessage;\r\n","import React, { PropsWithChildren, useContext } from \"react\";\r\nimport { View, ViewProps } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport { GlobalContext } from \"../context/GlobalContext\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useStyles from \"../hooks/useStyles\";\r\n\r\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\r\n    const { darkMode } = useContext(GlobalContext);\r\n    const { backgroundLight, borderDark } = useColors();\r\n    const { border } = useStyles();\r\n    return (\r\n        <View\r\n            {...props}\r\n            style={[\r\n                {\r\n                    ...border({ color: darkMode ? borderDark : backgroundLight }),\r\n                    backgroundColor: backgroundLight,\r\n                    marginTop: Spacing.normal + Spacing.small,\r\n                    padding: Spacing.small + Spacing.tiny\r\n                },\r\n                props.style\r\n            ]}\r\n        />\r\n    );\r\n};\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\nimport { Icon } from \"react-native-elements\";\r\n\r\nimport useColors from \"../hooks/useColors\";\r\n\r\nconst SelectIcon = () => {\r\n    const { accent } = useColors();\r\n    return <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: 4 }} />;\r\n};\r\n\r\nexport default SelectIcon;\r\n","import React, { FC, ReactNode, useState } from \"react\";\r\nimport { View, ViewStyle } from \"react-native\";\r\n\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Heading from \"./Heading\";\r\n\r\nexport interface ExpandableProps {\r\n    title: string;\r\n    expanded: boolean;\r\n    onExpand?: () => void;\r\n    style?: ViewStyle;\r\n    children?: ReactNode;\r\n}\r\n\r\nconst Expandable: FC<ExpandableProps> = props => {\r\n    const t = useTranslation();\r\n    const [expanded, setExpanded] = useState(true);\r\n    const shouldExpand = props.expanded && expanded;\r\n    const buttonText = shouldExpand ? undefined : t(\"change\");\r\n    const onPress = () => {\r\n        setExpanded(true);\r\n        props.onExpand?.();\r\n    };\r\n\r\n    return (\r\n        <View style={props.style}>\r\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\r\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Expandable;\r\n","import React from \"react\";\r\n\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Button from \"./Button\";\r\n\r\nconst FetchingButton = () => {\r\n    const t = useTranslation();\r\n    return <Button title={t(\"fetching\")} disabled={true} />;\r\n};\r\nexport default FetchingButton;\r\n","import React from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\n\r\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\r\n\r\nexport default Loading;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { IS_DESKTOP } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useLinker from \"../hooks/useLinker\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport FlexView from \"./FlexView\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface MetaProps {\r\n    label: string;\r\n    text?: string;\r\n    suffix?: string;\r\n    url?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst Meta: FC<MetaProps> = props => {\r\n    const t = useTranslation();\r\n    const { textMedium, textLight, placeholder } = useColors();\r\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\r\n    const text = props.disabled\r\n        ? \"N/A\"\r\n        : props.text\r\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\r\n        : t(\"fetching\");\r\n    return (\r\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\r\n            <Text note={!IS_DESKTOP} fontWeight={\"bold\"} style={{ color: props.disabled ? placeholder : textMedium }}>\r\n                {props.label}\r\n            </Text>\r\n            <Text\r\n                note={!IS_DESKTOP}\r\n                onPress={props.url ? onPress : undefined}\r\n                style={{\r\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\r\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\r\n                }}>\r\n                {text}\r\n            </Text>\r\n        </FlexView>\r\n    );\r\n};\r\n\r\nexport default Meta;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Platform, View } from \"react-native\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useStyles from \"../hooks/useStyles\";\r\nimport Token from \"../types/Token\";\r\nimport { formatBalance, isETH, parseBalance, pow10 } from \"../utils\";\r\nimport Button from \"./Button\";\r\nimport Heading from \"./Heading\";\r\nimport Input from \"./Input\";\r\n\r\nexport interface TokenInputProps {\r\n    title?: string;\r\n    token?: Token;\r\n    amount: string;\r\n    onAmountChanged: (amount: string) => void;\r\n    label?: string;\r\n    hideMaxButton?: boolean;\r\n    maxButtonText?: string;\r\n    autoFocus?: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst TokenInput: FC<TokenInputProps> = props => {\r\n    const { border } = useStyles();\r\n    const onChangeText = useCallback(\r\n        (text: string) => {\r\n            if (props.token && props.onAmountChanged) {\r\n                try {\r\n                    parseBalance(text, props.token.decimals);\r\n                    props.onAmountChanged(text);\r\n                } catch (e) {\r\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\r\n                        props.onAmountChanged(text);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        [props.token, props.onAmountChanged]\r\n    );\r\n    return (\r\n        <View>\r\n            {props.title && <Heading text={props.title} />}\r\n            <View>\r\n                <Input\r\n                    label={props.label}\r\n                    value={props.amount}\r\n                    onChangeText={onChangeText}\r\n                    placeholder={\"0.0\"}\r\n                    keyboardType={\"numeric\"}\r\n                    autoFocus={props.autoFocus || false}\r\n                    inputStyle={{ marginHorizontal: Spacing.tiny }}\r\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\r\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\r\n                    containerStyle={{\r\n                        ...border(),\r\n                        paddingHorizontal: Spacing.tiny,\r\n                        paddingTop: 15,\r\n                        paddingBottom: 2\r\n                    }}\r\n                />\r\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\r\n                    <MaxButton\r\n                        token={props.token}\r\n                        maxButtonText={props.maxButtonText}\r\n                        updateAmount={props.onAmountChanged}\r\n                    />\r\n                )}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\r\n    const { accent } = useColors();\r\n    const onPressMax = useCallback(() => {\r\n        if (props.token) {\r\n            let balance = props.token.balance;\r\n            if (isETH(props.token)) {\r\n                // Subtract 0.01 ETH for gas fee\r\n                const fee = pow10(16);\r\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\r\n            }\r\n            props.updateAmount(formatBalance(balance, props.token.decimals));\r\n        }\r\n    }, [props.token, props.updateAmount]);\r\n    return (\r\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\r\n            <Button\r\n                type={\"clear\"}\r\n                size={\"small\"}\r\n                color={accent}\r\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\r\n                fontWeight={\"bold\"}\r\n                onPress={onPressMax}\r\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default TokenInput;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Platform } from \"react-native\";\r\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\r\n\r\nimport useColors from \"../hooks/useColors\";\r\n\r\nexport interface Validation {\r\n    regexp: RegExp;\r\n    error: string;\r\n}\r\n\r\nexport interface InputProps extends NativeInputProps {\r\n    color?: string;\r\n    size?: \"small\" | \"normal\" | \"large\";\r\n    allowed?: Validation[];\r\n    forbidden?: Validation[];\r\n    onError?: (error: string) => void;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst Input: FC<InputProps> = props => {\r\n    const { textDark, textMedium, textLight } = useColors();\r\n    const size = props.size || \"normal\";\r\n    const color = props.color || textDark;\r\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\r\n    const onChangeText = useCallback(\r\n        (text: string) => {\r\n            props.onChangeText?.(text);\r\n            props.onError?.(\"\");\r\n            const errors = [] as string[];\r\n            if (text !== \"\" && props.forbidden) {\r\n                props.forbidden.forEach(validation => {\r\n                    if (text.match(validation.regexp)) {\r\n                        errors.push(validation.error);\r\n                    }\r\n                });\r\n            }\r\n            if (text !== \"\" && props.allowed) {\r\n                props.allowed.forEach(validation => {\r\n                    if (!text.match(validation.regexp)) {\r\n                        errors.push(validation.error);\r\n                    }\r\n                });\r\n            }\r\n            if (errors.length > 0) {\r\n                props.onError?.(errors.join(\"\\n\"));\r\n            }\r\n        },\r\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\r\n    );\r\n    return (\r\n        <NativeInput\r\n            {...props}\r\n            inputStyle={[\r\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\r\n                // @ts-ignore\r\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\r\n                props.inputStyle\r\n            ]}\r\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\r\n            placeholderTextColor={props.placeholderTextColor || textLight}\r\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\r\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\r\n            onChangeText={onChangeText}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import { useContext } from \"react\";\r\n\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\r\n\r\nconst useDelayedOnBlockEffect = (\r\n    effect: OnBlockListener,\r\n    getEventName: () => string,\r\n    inputs?: any[],\r\n    initialTimeout = 500\r\n) => {\r\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\r\n    const eventName = getEventName();\r\n    useAsyncEffect<number[]>(\r\n        () => {\r\n            return [\r\n                setTimeout(effect, initialTimeout),\r\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\r\n            ];\r\n        },\r\n        handles => {\r\n            if (handles) {\r\n                handles.forEach(handle => clearTimeout(handle));\r\n                removeOnBlockListener(eventName);\r\n            }\r\n        },\r\n        inputs\r\n    );\r\n};\r\n\r\nexport default useDelayedOnBlockEffect;\r\n","import { useCallback } from \"react\";\r\n\r\nimport { WETH } from \"@sushiswap/sdk\";\r\nimport { ethers } from \"ethers\";\r\nimport { getContract } from \"../utils\";\r\nimport { logTransaction } from \"../utils/analytics-utils\";\r\n\r\nconst useWeth = () => {\r\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\r\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\r\n        const gasLimit = await weth.estimateGas.deposit({\r\n            value: amount\r\n        });\r\n        const tx = await weth.deposit({\r\n            value: amount,\r\n            gasLimit\r\n        });\r\n        return await logTransaction(tx, \"WETH.deposit()\");\r\n    }, []);\r\n\r\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\r\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\r\n        const gasLimit = await weth.estimateGas.withdraw(amount);\r\n        const tx = await weth.withdraw(amount, {\r\n            gasLimit\r\n        });\r\n        return await logTransaction(tx, \"WETH.withdraw()\");\r\n    }, []);\r\n\r\n    return {\r\n        wrapETH,\r\n        unwrapETH\r\n    };\r\n};\r\n\r\nexport default useWeth;\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport { ROUTER } from \"../constants/contracts\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport Token from \"../types/Token\";\r\nimport { isETH, parseBalance } from \"../utils\";\r\nimport useWeth from \"./useWeth\";\r\n\r\nexport interface TokenPairState {\r\n    fromSymbol: string;\r\n    setFromSymbol: (symbol: string) => void;\r\n    toSymbol: string;\r\n    setToSymbol: (symbol: string) => void;\r\n    fromToken?: Token;\r\n    toToken?: Token;\r\n    fromAmount: string;\r\n    setFromAmount: (amount: string) => void;\r\n    toAmount: string;\r\n    setToAmount: (amount: string) => void;\r\n    fromTokenAllowed: boolean;\r\n    setFromTokenAllowed: (allowed: boolean) => void;\r\n    toTokenAllowed: boolean;\r\n    setToTokenAllowed: (allowed: boolean) => void;\r\n    loading: boolean;\r\n    onWrap: () => Promise<void>;\r\n    wrapping: boolean;\r\n    onUnwrap: () => Promise<void>;\r\n    unwrapping: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useTokenPairState: () => TokenPairState = () => {\r\n    const { signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\r\n    const { wrapETH, unwrapETH } = useWeth();\r\n    const [fromSymbol, setFromSymbol] = useState(\"\");\r\n    const [toSymbol, setToSymbol] = useState(\"\");\r\n    const [fromAmount, setFromAmount] = useState(\"\");\r\n    const [toAmount, setToAmount] = useState(\"\");\r\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\r\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [wrapping, setWrapping] = useState(false);\r\n    const [unwrapping, setUnwrapping] = useState(false);\r\n\r\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\r\n    const toToken = tokens.find(token => token.symbol === toSymbol);\r\n\r\n    useEffect(() => {\r\n        if (fromSymbol === \"\") {\r\n            setToSymbol(\"\");\r\n        }\r\n        setFromAmount(\"\");\r\n        setToAmount(\"\");\r\n    }, [fromSymbol, toSymbol]);\r\n\r\n    useEffect(() => {\r\n        setFromSymbol(\"\");\r\n    }, [address]);\r\n\r\n    useAsyncEffect(async () => {\r\n        if (fromToken && toToken && signer) {\r\n            setFromTokenAllowed(false);\r\n            setToTokenAllowed(false);\r\n            setLoading(true);\r\n            try {\r\n                const minAllowance = ethers.BigNumber.from(2)\r\n                    .pow(96)\r\n                    .sub(1);\r\n                if (!isETH(fromToken)) {\r\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\r\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\r\n                }\r\n                if (!isETH(toToken)) {\r\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\r\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\r\n                }\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [fromToken, toToken, signer]);\r\n\r\n    const onWrap = useCallback(async () => {\r\n        if (fromAmount && signer) {\r\n            setWrapping(true);\r\n            try {\r\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\r\n                if (tx) {\r\n                    await tx.wait();\r\n                    await updateTokens();\r\n                    setFromSymbol(\"\");\r\n                }\r\n            } finally {\r\n                setWrapping(false);\r\n            }\r\n        }\r\n    }, [fromAmount, signer]);\r\n\r\n    const onUnwrap = useCallback(async () => {\r\n        if (fromAmount && signer) {\r\n            setUnwrapping(true);\r\n            try {\r\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\r\n                if (tx) {\r\n                    await tx.wait();\r\n                    await updateTokens();\r\n                    setFromSymbol(\"\");\r\n                }\r\n            } finally {\r\n                setUnwrapping(false);\r\n            }\r\n        }\r\n    }, [fromAmount, signer]);\r\n\r\n    return {\r\n        fromSymbol,\r\n        setFromSymbol,\r\n        toSymbol,\r\n        setToSymbol,\r\n        fromToken,\r\n        toToken,\r\n        fromAmount,\r\n        setFromAmount,\r\n        toAmount,\r\n        setToAmount,\r\n        fromTokenAllowed,\r\n        setFromTokenAllowed,\r\n        toTokenAllowed,\r\n        setToTokenAllowed,\r\n        loading,\r\n        onWrap,\r\n        wrapping,\r\n        onUnwrap,\r\n        unwrapping\r\n    };\r\n};\r\n\r\nexport default useTokenPairState;\r\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n"],"sourceRoot":""}