{"version":3,"sources":["src/components/Heading.tsx","src/components/TokenLogo.tsx","src/components/Border.tsx","src/components/Loading.tsx","src/components/TokenSymbol.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","assets/empty-token.png","assets/ETH.png","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/hooks/useHomeState.tsx","src/screens/HomeScreen.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","TokenLogo","backgroundLight","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","backgroundColor","borderRadius","onError","opacity","Border","border","marginTop","Loading","marginVertical","large","TokenSymbol","caption","marginLeft","symbol","TokenAmount","formatBalance","amount","balance","decimals","TokenName","numberOfLines","ellipsizeMode","name","module","exports","TokenPrice","note","formatUSD","priceUSD","TokenValue","valueUSD","useHomeState","useContext","EthersContext","provider","signer","address","tokens","lpTokens","setLPTokens","pools","setPools","loadingLPTokens","setLoadingLPTokens","loadingPools","setLoadingPools","getPair","useSDK","useEffect","undefined","useAsyncEffect","a","async","weth","find","t","length","Fraction","String","sushiData","price","wethPriceUSD","parse","fetchMyLPTokens","getAddress","fetched","Promise","all","map","lpToken","fetchLPTokenWithValue","fetchMyPools","Home","state","View","normal","MyTokens","useTranslation","loadingTokens","goToSwap","useLinker","loading","TokenItem","MyLPTokens","goToRemoveLiquidity","LPTokenItem","Pools","goToFarming","TokenList","renderItem","useCallback","item","key","data","useMemo","filter","amountDeposited","isZero","sort","t1","t2","FlatList","keyExtractor","ItemSeparatorComponent","EmptyList","margin","Text","textAlign","FlexView","paddingVertical","path","tokenA","tokenB","ExternalIcon","textDark","isETH","endsWith","ethers","constants","AddressZero","TouchableHighlight","window","open","toLowerCase","sum","reduce","previous","current","HomeScreen","totalValue","Screen","Container","BackgroundImage","Content","huge","Title","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/10.e3e1b9b7.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport Button from \"./Button\";\r\nimport FlexView from \"./FlexView\";\r\nimport Text from \"./Text\";\r\n\r\ninterface HeadingProps {\r\n    text: string;\r\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\r\n    disabled?: boolean;\r\n    buttonText?: string;\r\n    onPressButton?: () => void | Promise<void>;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst Heading: FC<HeadingProps> = props => {\r\n    const { accent } = useColors();\r\n    return (\r\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\r\n            <Text\r\n                medium={true}\r\n                fontWeight={props.fontWeight || \"bold\"}\r\n                disabled={props.disabled}\r\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\r\n                {props.text}\r\n            </Text>\r\n            {props.buttonText && (\r\n                <Button\r\n                    type={\"clear\"}\r\n                    size={\"small\"}\r\n                    title={props.buttonText}\r\n                    onPress={props.onPressButton}\r\n                    color={accent}\r\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\r\n                />\r\n            )}\r\n        </FlexView>\r\n    );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState } from \"react\";\r\nimport { Image, View, ViewStyle } from \"react-native\";\r\n\r\nimport useColors from \"../hooks/useColors\";\r\nimport Token from \"../types/Token\";\r\nimport { isWETH } from \"../utils\";\r\n\r\nconst TokenLogo = (props: {\r\n    token: Token;\r\n    small?: boolean;\r\n    replaceWETH?: boolean;\r\n    disabled?: boolean;\r\n    style?: ViewStyle;\r\n}) => {\r\n    const { backgroundLight: disabled } = useColors();\r\n    const [error, setError] = useState(false);\r\n    const size = props.small ? 22 : 27;\r\n    const placeholder = require(\"../../assets/empty-token.png\");\r\n    const ETH = require(\"../../assets/ETH.png\");\r\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\r\n    return (\r\n        <View\r\n            style={[\r\n                {\r\n                    width: size,\r\n                    height: size,\r\n                    backgroundColor: props.disabled ? disabled : \"white\",\r\n                    borderRadius: size / 2\r\n                },\r\n                props.style\r\n            ]}>\r\n            <Image\r\n                source={!props.token.logoURI || error ? placeholder : source}\r\n                onError={() => setError(true)}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    borderRadius: size / 2,\r\n                    opacity: props.disabled ? 0.5 : 1\r\n                }}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default TokenLogo;\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\n\r\nconst Border = props => {\r\n    const { border } = useColors();\r\n    return (\r\n        <View\r\n            style={{\r\n                height: 1,\r\n                width: \"100%\",\r\n                backgroundColor: border,\r\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\r\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Border;\r\n","import React from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\n\r\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\r\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\r\n        {props.token.symbol}\r\n    </Text>\r\n);\r\n\r\nexport default TokenSymbol;\r\n","import React from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { IS_DESKTOP } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport { formatBalance } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\r\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\r\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\r\n    </Text>\r\n);\r\n\r\nexport default TokenAmount;\r\n","import React from \"react\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\r\n    <Text\r\n        caption={true}\r\n        numberOfLines={1}\r\n        ellipsizeMode={\"tail\"}\r\n        style={{ marginLeft: Spacing.small, width: 180 }}\r\n        disabled={props.disabled}>\r\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\r\n    </Text>\r\n);\r\n\r\nexport default TokenName;\r\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport { formatUSD } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface TokenPriceProps {\r\n    token: TokenWithValue;\r\n    disabled?: boolean;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst TokenPrice: FC<TokenPriceProps> = props => {\r\n    return (\r\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\r\n            {formatUSD(props.token.priceUSD || 0, 4)}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default TokenPrice;\r\n","import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport { formatUSD } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface TokenValueProps {\r\n    token: TokenWithValue;\r\n    disabled?: boolean;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst TokenValue: FC<TokenValueProps> = props => {\r\n    return (\r\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\r\n            {formatUSD(props.token.valueUSD || 0, 4)}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default TokenValue;\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport sushiData from \"@sushiswap/sushi-data\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport Fraction from \"../constants/Fraction\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\r\nimport { isWETH } from \"../utils\";\r\nimport { fetchLPTokenWithValue, fetchMyLPTokens, fetchMyPools } from \"../utils/fetch-utils\";\r\nimport useSDK from \"./useSDK\";\r\n\r\nexport interface HomeState {\r\n    loadingLPTokens: boolean;\r\n    loadingPools: boolean;\r\n    lpTokens?: LPTokenWithValue[];\r\n    pools?: LPTokenWithValue[];\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useHomeState = () => {\r\n    const { provider, signer, address, tokens } = useContext(EthersContext);\r\n    const [lpTokens, setLPTokens] = useState<LPTokenWithValue[]>();\r\n    const [pools, setPools] = useState<LPTokenWithValue[]>();\r\n    const [loadingLPTokens, setLoadingLPTokens] = useState(true);\r\n    const [loadingPools, setLoadingPools] = useState(true);\r\n    const { getPair } = useSDK();\r\n\r\n    useEffect(() => {\r\n        setLPTokens(undefined);\r\n        setPools(undefined);\r\n        setLoadingLPTokens(true);\r\n        setLoadingPools(true);\r\n    }, [address]);\r\n\r\n    // Load Liquidity\r\n    useAsyncEffect(async () => {\r\n        const weth = tokens.find(t => isWETH(t));\r\n        if (provider && signer && weth && tokens && tokens.length > 0) {\r\n            setLoadingLPTokens(true);\r\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\r\n            const fetched = await fetchMyLPTokens(await signer.getAddress(), tokens, provider);\r\n            try {\r\n                setLPTokens(\r\n                    await Promise.all(\r\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\r\n                    )\r\n                );\r\n            } finally {\r\n                setLoadingLPTokens(false);\r\n            }\r\n        }\r\n    }, [getPair, provider, signer, tokens]);\r\n\r\n    // Load Farming\r\n    useAsyncEffect(async () => {\r\n        const weth = tokens.find(t => isWETH(t));\r\n        if (provider && signer && weth && tokens && tokens.length > 0 && lpTokens) {\r\n            setLoadingPools(true);\r\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\r\n            const fetched = await fetchMyPools(await signer.getAddress(), tokens, provider);\r\n            try {\r\n                setPools(\r\n                    await Promise.all(\r\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\r\n                    )\r\n                );\r\n            } finally {\r\n                setLoadingPools(false);\r\n            }\r\n        }\r\n    }, [getPair, provider, signer, tokens, lpTokens]);\r\n\r\n    return {\r\n        loadingLPTokens,\r\n        loadingPools,\r\n        tokens,\r\n        lpTokens,\r\n        pools\r\n    };\r\n};\r\n\r\nexport default useHomeState;\r\n","import React, { FC, useCallback, useContext, useMemo } from \"react\";\r\nimport { FlatList, Platform, TouchableHighlight, View } from \"react-native\";\r\nimport { Icon } from \"react-native-elements\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport BackgroundImage from \"../components/BackgroundImage\";\r\nimport Border from \"../components/Border\";\r\nimport Container from \"../components/Container\";\r\nimport Content from \"../components/Content\";\r\nimport FlexView from \"../components/FlexView\";\r\nimport Heading from \"../components/Heading\";\r\nimport Loading from \"../components/Loading\";\r\nimport Text from \"../components/Text\";\r\nimport Title from \"../components/Title\";\r\nimport TokenAmount from \"../components/TokenAmount\";\r\nimport TokenLogo from \"../components/TokenLogo\";\r\nimport TokenName from \"../components/TokenName\";\r\nimport TokenPrice from \"../components/TokenPrice\";\r\nimport TokenSymbol from \"../components/TokenSymbol\";\r\nimport TokenValue from \"../components/TokenValue\";\r\nimport WebFooter from \"../components/web/WebFooter\";\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useHomeState, { HomeState } from \"../hooks/useHomeState\";\r\nimport useLinker from \"../hooks/useLinker\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport { formatUSD } from \"../utils\";\r\nimport Screen from \"./Screen\";\r\n\r\ninterface TokenItemProps {\r\n    token: TokenWithValue;\r\n    disabled?: boolean;\r\n}\r\n\r\ninterface LPTokenItemProps {\r\n    token: LPTokenWithValue;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst HomeScreen = () => {\r\n    const t = useTranslation();\r\n    const state = useHomeState();\r\n    const { loadingTokens } = useContext(EthersContext);\r\n    const loading = loadingTokens || state.loadingLPTokens || state.loadingPools;\r\n    const totalValue = sum(state.tokens) + sum(state.lpTokens) + sum(state.pools);\r\n    return (\r\n        <Screen>\r\n            <Container>\r\n                <BackgroundImage />\r\n                <Content style={{ paddingBottom: Spacing.huge }}>\r\n                    <Title text={t(\"total-value\")} style={{ flex: 1, marginTop: Spacing.normal }} />\r\n                    <Title\r\n                        text={loading ? t(\"fetching\") : formatUSD(totalValue, 4)}\r\n                        fontWeight={\"light\"}\r\n                        disabled={loading}\r\n                        style={{ fontSize: IS_DESKTOP ? 32 : 24 }}\r\n                    />\r\n                    <Home state={state} />\r\n                </Content>\r\n                {Platform.OS === \"web\" && <WebFooter />}\r\n            </Container>\r\n        </Screen>\r\n    );\r\n};\r\n\r\nconst Home = ({ state }: { state: HomeState }) => {\r\n    return (\r\n        <View style={{ marginTop: IS_DESKTOP ? Spacing.large : Spacing.normal }}>\r\n            <MyTokens state={state} />\r\n            <View style={{ height: Spacing.large }} />\r\n            <MyLPTokens state={state} />\r\n            <View style={{ height: Spacing.large }} />\r\n            <Pools state={state} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MyTokens = ({ state }: { state: HomeState }) => {\r\n    const t = useTranslation();\r\n    const { loadingTokens, tokens } = useContext(EthersContext);\r\n    const goToSwap = useLinker(\"/swap\", \"Swap\");\r\n    return (\r\n        <View>\r\n            <Heading text={t(\"tokens\")} buttonText={t(\"manage\")} onPressButton={goToSwap} />\r\n            <TokenList loading={loadingTokens} tokens={tokens} TokenItem={TokenItem} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MyLPTokens = ({ state }: { state: HomeState }) => {\r\n    const t = useTranslation();\r\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\r\n    return (\r\n        <View>\r\n            <Heading text={t(\"liquidity\")} buttonText={t(\"manage\")} onPressButton={goToRemoveLiquidity} />\r\n            {/* @ts-ignore */}\r\n            <TokenList loading={state.loadingLPTokens} tokens={state.lpTokens} TokenItem={LPTokenItem} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst Pools = ({ state }: { state: HomeState }) => {\r\n    const t = useTranslation();\r\n    const goToFarming = useLinker(\"/farming\", \"Farming\");\r\n    return (\r\n        <View>\r\n            <Heading text={t(\"farms\")} buttonText={t(\"manage\")} onPressButton={goToFarming} />\r\n            {/* @ts-ignore */}\r\n            <TokenList loading={state.loadingPools} tokens={state.pools} TokenItem={LPTokenItem} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst TokenList = (props: {\r\n    loading: boolean;\r\n    tokens?: TokenWithValue[] | LPTokenWithValue[];\r\n    TokenItem: FC<TokenItemProps | LPTokenItemProps>;\r\n}) => {\r\n    const renderItem = useCallback(({ item }) => {\r\n        return <props.TokenItem key={item.address} token={item} />;\r\n    }, []);\r\n    const data = useMemo(\r\n        () =>\r\n            (props.tokens || [])\r\n                // @ts-ignore\r\n                .filter(token => !(token.amountDeposited ? token.amountDeposited.isZero() : token.balance.isZero()))\r\n                .sort((t1, t2) => (t2.valueUSD || 0) - (t1.valueUSD || 0)),\r\n        [props.tokens]\r\n    );\r\n    return props.loading ? (\r\n        <Loading />\r\n    ) : data.length === 0 ? (\r\n        <EmptyList />\r\n    ) : (\r\n        <FlatList\r\n            keyExtractor={item => item.address}\r\n            data={data}\r\n            renderItem={renderItem}\r\n            ItemSeparatorComponent={() => <Border small={true} />}\r\n        />\r\n    );\r\n};\r\n\r\nconst EmptyList = () => {\r\n    const t = useTranslation();\r\n    return (\r\n        <View style={{ margin: Spacing.normal }}>\r\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                {t(\"you-dont-have-assets\")}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst TokenItem = (props: TokenItemProps) => {\r\n    return (\r\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\r\n            <TokenLogo token={props.token} disabled={props.disabled} />\r\n            <View>\r\n                <TokenPrice token={props.token} disabled={props.disabled} style={{ marginLeft: Spacing.small }} />\r\n                <TokenName token={props.token} disabled={props.disabled} />\r\n            </View>\r\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                <TokenValue token={props.token} disabled={props.disabled} />\r\n                <FlexView>\r\n                    <TokenAmount token={props.token} disabled={props.disabled} />\r\n                    {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\r\n                </FlexView>\r\n            </View>\r\n            <ExternalIcon path={\"/tokens/\" + props.token.address} />\r\n        </FlexView>\r\n    );\r\n};\r\n\r\nconst LPTokenItem = (props: LPTokenItemProps) => {\r\n    return (\r\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\r\n            <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\r\n            <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\r\n            <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\r\n                {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\r\n            </Text>\r\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                <TokenValue token={props.token} disabled={props.disabled} />\r\n                <FlexView>\r\n                    <TokenAmount token={props.token} amount={props.token.amountDeposited} disabled={props.disabled} />\r\n                </FlexView>\r\n            </View>\r\n            <ExternalIcon path={\"/pairs/\" + props.token.address} />\r\n        </FlexView>\r\n    );\r\n};\r\n\r\nconst ExternalIcon = ({ path }) => {\r\n    const { textDark, disabled } = useColors();\r\n    const onPress = () => window.open(\"https://sushiswapanalytics.com/\" + path.toLowerCase(), \"_blank\");\r\n    const isETH = path.endsWith(ethers.constants.AddressZero);\r\n    return (\r\n        <TouchableHighlight onPress={onPress} disabled={isETH}>\r\n            <Icon\r\n                type={\"evilicon\"}\r\n                name={\"external-link\"}\r\n                color={isETH ? disabled : textDark}\r\n                style={{ marginLeft: Spacing.tiny }}\r\n            />\r\n        </TouchableHighlight>\r\n    );\r\n};\r\n\r\nconst sum = tokens => (tokens ? tokens.reduce((previous, current) => previous + (current.valueUSD || 0), 0) : 0);\r\n\r\nexport default HomeScreen;\r\n"],"sourceRoot":""}