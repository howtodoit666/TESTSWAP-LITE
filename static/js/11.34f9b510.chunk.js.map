{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/TokenSymbol.tsx","src/components/LPTokenSelect.tsx","src/hooks/useLPTokensState.tsx","node_modules/eth-permit/dist/eth-permit.js","node_modules/eth-permit/dist/lib.js","node_modules/utf8/utf8.js","src/hooks/useZapper.tsx","src/hooks/useRemoveLiquidityState.tsx","src/screens/RemoveLiquidityScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","TokenSymbol","medium","caption","marginLeft","LPTokenList","state","emptyText","Item","renderItem","item","key","selected","onSelectToken","setSelectedLPToken","data","lpTokens","sort","p1","p2","m1","multiplier","m2","apy","length","EmptyList","text","keyExtractor","margin","textAlign","width","LPTokenItem","textMedium","balance","formatBalance","decimals","ITEM_SEPARATOR_HEIGHT","alignItems","tokenA","small","replaceWETH","tokenB","flex","light","LPTokenSelect","expanded","selectedLPToken","onExpand","updatingLPTokens","useLPTokensState","mode","useTokenPairState","provider","tokens","lastTimeRefreshed","setLastTimeRefreshed","setLPTokens","selectedLPTokenAllowed","setSelectedLPTokenAllowed","pair","setPair","setAmount","getPair","useSDK","updateLPTokens","fetchMyPools","fetchPools","fetchMyLPTokens","fetchMyUniswapLPTokens","useEffect","useAsyncEffect","undefined","useDelayedOnBlockEffect","block","fromToken","toToken","updateLastTimeRefreshed","Date","now","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","signERC2612Permit","signDaiPermit","rpc_1","lib_1","MAX_INT","EIP712Domain","name","type","zeros","numZeros","padEnd","getTokenName","hexToUtf8","call","substr","getDomain","tokenAddress","chainId","all","getChainId","version","verifyingContract","holder","expiry","nonce","message","allowed","typedData","domain","types","Permit","primaryType","createTypedDaiData","sig","signData","assign","owner","deadline","createTypedERC2612Data","__importDefault","mod","__esModule","utf8_1","hex","str","code","l","replace","split","reverse","join","i","parseInt","String","fromCharCode","default","decode","root","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","charCodeAt","push","checkScalarValue","codePoint","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","encode","codePoints","index","byteString","tmp","array","ucs2encode","useZapper","ethereum","getTrade","calculateAmountOfLPTokenMinted","useSwapRouter","allowedSlippage","ttl","zapSlippage","Percent","populateSwapData","signer","trade","params","Router","swapCallParameters","feeOnTransfer","recipient","ZAP_IN","router","getContract","ROUTER","populateTransaction","methodName","args","zapIn","fromAmount","TokenAmount","convertToken","div","getOutputAmount","lpTokenAmount","contract","liquidityToken","deduct","isETH","ethers","constants","Zero","estimateGas","ZapIn","gasLimit","mul","logTransaction","map","arg","getZapOutSwappedAmount","outputToken","lpToken","fromReserve","parseCurrencyAmount","reserveOf","totalSupply","outputAmount","zapOut","ZAP_OUT","Math","floor","getTime","getAddress","permit","v","r","s","ZapOutWithPermit","useRemoveLiquidityState","getTokenAllowance","updateTokens","removeLiquidity","removeLiquidityETH","setOutputToken","removing","setRemoving","setFromSymbol","setToSymbol","minAllowance","BigNumber","from","pow","sub","allowance","gte","toReserve","setFromAmount","parseBalance","setToAmount","removeFromRouter","toAmount","liquidity","isWETH","amountToRemove","amountToRemoveETH","onRemove","RemoveLiquidity","ChangeNetwork","View","marginTop","large","Border","LPTokenOutputItem","Selectable","FlexView","TokenLogo","Text","CloseIcon","SelectIcon","AmountInput","TokenInput","onAmountChanged","Heading","AmountInfo","useMemo","add","FEE","InfoBox","Meta","label","Controls","error","setError","fromSymbol","toSymbol","approveRequired","isEmptyValue","gt","FetchingButton","ErrorMessage","RemoveButton","catch","Button","RemoveLiquidityScreen","Screen","Container","BackgroundImage","Content","Title","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/11.34f9b510.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface AmountMetaProps {\r\n    amount?: string;\r\n    suffix?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst AmountMeta: FC<AmountMetaProps> = props => {\r\n    const t = useTranslation();\r\n    const { textDark, textLight, placeholder } = useColors();\r\n    return (\r\n        <Text\r\n            style={{\r\n                fontSize: IS_DESKTOP ? 28 : 20,\r\n                marginBottom: Spacing.normal,\r\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\r\n            }}>\r\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default AmountMeta;\r\n","import React from \"react\";\r\n\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Button from \"./Button\";\r\n\r\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\r\n    const t = useTranslation();\r\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\r\n};\r\nexport default InsufficientBalanceButton;\r\n","import React, { FC, useCallback, useContext, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport Button from \"./Button\";\r\n\r\nexport interface ApproveButtonProps {\r\n    token: Token;\r\n    spender: string;\r\n    onSuccess: () => void;\r\n    onError: (e) => void;\r\n    hidden?: boolean;\r\n}\r\n\r\nconst ApproveButton: FC<ApproveButtonProps> = props => {\r\n    const t = useTranslation();\r\n    const { approveToken } = useContext(EthersContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const onPress = useCallback(async () => {\r\n        if (props.token) {\r\n            props.onError({});\r\n            setLoading(true);\r\n            try {\r\n                const tx = await approveToken(props.token.address, props.spender);\r\n                if (tx) {\r\n                    await tx.wait();\r\n                    props.onSuccess();\r\n                }\r\n            } catch (e) {\r\n                props.onError(e);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [props.token]);\r\n    if (props.hidden) return <View />;\r\n    return (\r\n        <Button\r\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\r\n            onPress={onPress}\r\n            loading={loading}\r\n            containerStyle={{ marginBottom: Spacing.tiny }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ApproveButton;\r\n","import React from \"react\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\r\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\r\n        {props.token.symbol}\r\n    </Text>\r\n);\r\n\r\nexport default TokenSymbol;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { FlatList, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport { formatBalance } from \"../utils\";\r\nimport CloseIcon from \"./CloseIcon\";\r\nimport Expandable from \"./Expandable\";\r\nimport FlexView from \"./FlexView\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Loading from \"./Loading\";\r\nimport Selectable from \"./Selectable\";\r\nimport SelectIcon from \"./SelectIcon\";\r\nimport Text from \"./Text\";\r\nimport TokenLogo from \"./TokenLogo\";\r\n\r\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\r\n\r\nexport interface LPTokenSelectProps {\r\n    state: LPTokensState;\r\n    title: string;\r\n    emptyText: string;\r\n    Item: FC<LPTokenItemProps>;\r\n    style?: ViewStyle;\r\n}\r\n\r\nexport interface LPTokenItemProps {\r\n    token: LPToken;\r\n    selected: boolean;\r\n    onSelectToken: (token: LPToken) => void;\r\n}\r\n\r\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\r\n    const onUnselectToken = () => props.state.setSelectedLPToken();\r\n    return (\r\n        <View style={props.style}>\r\n            <Expandable\r\n                title={props.title}\r\n                expanded={!props.state.selectedLPToken}\r\n                onExpand={() => props.state.setSelectedLPToken()}>\r\n                <LPTokenList state={props.state} emptyText={props.emptyText} Item={props.Item} />\r\n            </Expandable>\r\n            {props.state.selectedLPToken && (\r\n                <props.Item token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst LPTokenList = ({\r\n    state,\r\n    emptyText,\r\n    Item\r\n}: {\r\n    state: LPTokensState;\r\n    emptyText: string;\r\n    Item: FC<LPTokenItemProps>;\r\n}) => {\r\n    const renderItem = useCallback(\r\n        ({ item }) => {\r\n            return <Item key={item.symbol} token={item} selected={false} onSelectToken={state.setSelectedLPToken} />;\r\n        },\r\n        [state.setSelectedLPToken]\r\n    );\r\n    const data = state.lpTokens.sort((p1, p2) => {\r\n        const m1 = p1.multiplier || 0;\r\n        const m2 = p2.multiplier || 0;\r\n        return m1 === m2 ? (p2.apy || 0) - (p1.apy || 0) : m2 - m1;\r\n    });\r\n    return state.loading ? (\r\n        <Loading />\r\n    ) : data.length === 0 ? (\r\n        <EmptyList text={emptyText} />\r\n    ) : (\r\n        <FlatList keyExtractor={item => item.symbol} data={data} renderItem={renderItem} />\r\n    );\r\n};\r\n\r\nconst EmptyList = ({ text }: { text: string }) => {\r\n    return (\r\n        <View style={{ margin: Spacing.normal }}>\r\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                {text}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\r\n    const { textMedium } = useColors();\r\n    const balance = formatBalance(props.token.balance, props.token.decimals, 6);\r\n    const onPress = useCallback(() => {\r\n        props.onSelectToken(props.token);\r\n    }, [props.onSelectToken, props.token]);\r\n    return (\r\n        <Selectable\r\n            selected={props.selected}\r\n            onPress={onPress}\r\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\r\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\r\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\r\n                    {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\r\n                </Text>\r\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\r\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\r\n                        {balance}\r\n                    </Text>\r\n                </View>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport default LPTokenSelect;\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Pair } from \"@sushiswap/sdk\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport { fetchMyLPTokens, fetchMyPools, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\r\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\r\nimport useSDK from \"./useSDK\";\r\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\r\n\r\nexport interface LPTokensState extends TokenPairState {\r\n    updateLPTokens: () => Promise<void>;\r\n    lastTimeRefreshed: number;\r\n    updateLastTimeRefreshed: () => void;\r\n    lpTokens: LPToken[];\r\n    selectedLPToken?: LPToken;\r\n    setSelectedLPToken: (token?: LPToken) => void;\r\n    selectedLPTokenAllowed: boolean;\r\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\r\n    pair?: Pair;\r\n    amount: string;\r\n    setAmount: (amount: string) => void;\r\n}\r\n\r\ntype Mode = \"pools\" | \"my-pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\r\n\r\nlet updatingLPTokens = false;\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\r\n    const state = useTokenPairState();\r\n    const { provider, address, tokens } = useContext(EthersContext);\r\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\r\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\r\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\r\n    const [pair, setPair] = useState<Pair>();\r\n    const [amount, setAmount] = useState(\"\");\r\n    const { getPair } = useSDK();\r\n\r\n    const updateLPTokens = async () => {\r\n        if (address && provider && tokens.length > 0 && !updatingLPTokens) {\r\n            try {\r\n                updatingLPTokens = true;\r\n                const data = await (mode === \"my-pools\"\r\n                    ? fetchMyPools(address, tokens, provider)\r\n                    : mode === \"pools\"\r\n                    ? fetchPools(address, tokens, provider)\r\n                    : mode === \"my-lp-tokens\"\r\n                    ? fetchMyLPTokens(address, tokens, provider)\r\n                    : fetchMyUniswapLPTokens(address, tokens, provider));\r\n                if (data) {\r\n                    setLPTokens(data);\r\n                }\r\n            } finally {\r\n                updatingLPTokens = false;\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!selectedLPToken) {\r\n            setAmount(\"\");\r\n        }\r\n    }, [selectedLPToken]);\r\n\r\n    useAsyncEffect(async () => {\r\n        setLoading(true);\r\n        setPair(undefined);\r\n        if (selectedLPToken && provider) {\r\n            try {\r\n                setPair(await getPair(selectedLPToken.tokenA, selectedLPToken.tokenB, provider));\r\n            } catch (e) {\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, [selectedLPToken, provider]);\r\n\r\n    useDelayedOnBlockEffect(\r\n        async block => {\r\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\r\n                if (!block) {\r\n                    setLoading(true);\r\n                }\r\n                await updateLPTokens();\r\n            }\r\n        },\r\n        () => \"updateLPTokens()\",\r\n        [tokens.length, address, lastTimeRefreshed],\r\n        0\r\n    );\r\n\r\n    return {\r\n        ...state,\r\n        fromToken: state.fromToken || selectedLPToken?.tokenA,\r\n        toToken: state.toToken || selectedLPToken?.tokenB,\r\n        updateLPTokens,\r\n        loading: state.loading || loading,\r\n        lastTimeRefreshed,\r\n        updateLastTimeRefreshed: () => {\r\n            setLastTimeRefreshed(Date.now());\r\n        },\r\n        lpTokens,\r\n        selectedLPToken,\r\n        setSelectedLPToken,\r\n        selectedLPTokenAllowed,\r\n        setSelectedLPTokenAllowed,\r\n        pair,\r\n        amount,\r\n        setAmount\r\n    };\r\n};\r\n\r\nexport default useLPTokensState;\r\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signERC2612Permit = exports.signDaiPermit = void 0;\nconst rpc_1 = require(\"./rpc\");\nconst lib_1 = require(\"./lib\");\nconst MAX_INT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\nconst createTypedDaiData = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"holder\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"expiry\", type: \"uint256\" },\n                { name: \"allowed\", type: \"bool\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst createTypedERC2612Data = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"owner\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"value\", type: \"uint256\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"deadline\", type: \"uint256\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst NONCES_FN = '0x7ecebe00';\nconst NAME_FN = '0x06fdde03';\nconst zeros = (numZeros) => ''.padEnd(numZeros, '0');\nconst getTokenName = (provider, address) => __awaiter(void 0, void 0, void 0, function* () { return lib_1.hexToUtf8((yield rpc_1.call(provider, address, NAME_FN)).substr(130)); });\nconst getDomain = (provider, token) => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof token !== 'string') {\n        return token;\n    }\n    const tokenAddress = token;\n    const [name, chainId] = yield Promise.all([\n        getTokenName(provider, tokenAddress),\n        rpc_1.getChainId(provider),\n    ]);\n    const domain = { name, version: '1', chainId, verifyingContract: tokenAddress };\n    return domain;\n});\nexports.signDaiPermit = (provider, token, holder, spender, expiry, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        holder,\n        spender,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${holder.substr(2)}`)),\n        expiry: expiry || MAX_INT,\n        allowed: true,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedDaiData(message, domain);\n    const sig = yield rpc_1.signData(provider, holder, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\nexports.signERC2612Permit = (provider, token, owner, spender, value = MAX_INT, deadline, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        owner,\n        spender,\n        value,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${owner.substr(2)}`)),\n        deadline: deadline || MAX_INT,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedERC2612Data(message, domain);\n    const sig = yield rpc_1.signData(provider, owner, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToUtf8 = void 0;\nconst utf8_1 = __importDefault(require(\"utf8\"));\nexports.hexToUtf8 = function (hex) {\n    // if (!isHexStrict(hex))\n    //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n    let str = \"\";\n    let code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    let l = hex.length;\n    for (let i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8_1.default.decode(str);\n};\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","import { useCallback, useContext } from \"react\";\r\n\r\nimport { Percent, Router, TokenAmount } from \"@sushiswap/sdk\";\r\nimport { signERC2612Permit } from \"eth-permit\";\r\nimport { ethers } from \"ethers\";\r\nimport { ROUTER, ZAP_IN, ZAP_OUT } from \"../constants/contracts\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport Token from \"../types/Token\";\r\nimport { convertToken, deduct, getContract, isETH, parseCurrencyAmount } from \"../utils\";\r\nimport { logTransaction } from \"../utils/analytics-utils\";\r\nimport useSDK from \"./useSDK\";\r\nimport useSwapRouter from \"./useSwapRouter\";\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useZapper = () => {\r\n    const { ethereum } = useContext(EthersContext);\r\n    const { getPair, getTrade, calculateAmountOfLPTokenMinted } = useSDK();\r\n    const { allowedSlippage, ttl } = useSwapRouter();\r\n    const zapSlippage = new Percent(\"3\", \"100\"); // 3.0%\r\n\r\n    const populateSwapData = async (\r\n        fromToken: Token,\r\n        toToken: Token,\r\n        amount: ethers.BigNumber,\r\n        provider: ethers.providers.BaseProvider,\r\n        signer: ethers.Signer\r\n    ) => {\r\n        const trade = await getTrade(fromToken, toToken, amount, provider);\r\n        if (!trade) throw new Error(\"Cannot find trade\");\r\n        const params = Router.swapCallParameters(trade, {\r\n            feeOnTransfer: false,\r\n            allowedSlippage,\r\n            recipient: ZAP_IN,\r\n            ttl\r\n        });\r\n        const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\r\n        const tx = await router.populateTransaction[params.methodName](...params.args, { value: params.value });\r\n        return tx.data || \"\";\r\n    };\r\n\r\n    const zapIn = useCallback(\r\n        async (\r\n            fromToken: Token,\r\n            toToken: Token,\r\n            fromAmount: ethers.BigNumber,\r\n            provider: ethers.providers.BaseProvider,\r\n            signer: ethers.Signer\r\n        ) => {\r\n            const pair = await getPair(fromToken, toToken, provider);\r\n            const amount = new TokenAmount(convertToken(fromToken), fromAmount.div(2).toString());\r\n            const lpTokenAmount = await calculateAmountOfLPTokenMinted(pair, amount, pair.getOutputAmount(amount)[0]);\r\n            if (!lpTokenAmount) throw new Error(\"Cannot calculate LP token amount\");\r\n            const contract = getContract(\"ZapIn\", ZAP_IN, signer);\r\n            const args = [\r\n                fromToken.address,\r\n                pair.liquidityToken.address,\r\n                fromAmount,\r\n                deduct(lpTokenAmount, zapSlippage),\r\n                ROUTER,\r\n                ROUTER,\r\n                await populateSwapData(fromToken, toToken, fromAmount.div(2), provider, signer)\r\n            ];\r\n            const value = isETH(fromToken) ? fromAmount : ethers.constants.Zero;\r\n            const gasLimit = await contract.estimateGas.ZapIn(...args, { value });\r\n            const tx = await contract.ZapIn(...args, {\r\n                value,\r\n                gasLimit: gasLimit.mul(120).div(100)\r\n            });\r\n            return logTransaction(tx, \"ZapIn_General_V2.ZapIn()\", ...args.map(arg => arg.toString()));\r\n        },\r\n        [populateSwapData]\r\n    );\r\n\r\n    const getZapOutSwappedAmount = async (\r\n        outputToken: Token,\r\n        lpToken: LPToken,\r\n        lpTokenAmount: ethers.BigNumber,\r\n        provider: ethers.providers.BaseProvider\r\n    ) => {\r\n        let fromToken: Token;\r\n        let toToken: Token;\r\n        if (outputToken === lpToken.tokenA) {\r\n            fromToken = lpToken.tokenB;\r\n            toToken = lpToken.tokenA;\r\n        } else if (outputToken === lpToken.tokenB) {\r\n            fromToken = lpToken.tokenA;\r\n            toToken = lpToken.tokenB;\r\n        } else {\r\n            throw new Error(\"Wrong outputToken\");\r\n        }\r\n        const pair = await getPair(fromToken, toToken, provider);\r\n        const fromReserve = parseCurrencyAmount(pair.reserveOf(convertToken(fromToken)), fromToken.decimals);\r\n        const fromAmount = lpTokenAmount.mul(fromReserve).div(lpToken.totalSupply);\r\n        const trade = await getTrade(fromToken, toToken, fromAmount, provider);\r\n        if (!trade) throw new Error(\"Cannot find trade\");\r\n        return parseCurrencyAmount(trade.outputAmount);\r\n    };\r\n\r\n    const zapOut = useCallback(\r\n        // tslint:disable-next-line:max-func-body-length\r\n        async (\r\n            lpToken: LPToken,\r\n            outputToken: Token,\r\n            amount: ethers.BigNumber,\r\n            provider: ethers.providers.BaseProvider,\r\n            signer: ethers.Signer\r\n        ) => {\r\n            const contract = getContract(\"ZapOut\", ZAP_OUT, signer);\r\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\r\n            const permit = await signERC2612Permit(\r\n                ethereum,\r\n                lpToken.address,\r\n                await signer.getAddress(),\r\n                ZAP_OUT,\r\n                amount.toString(),\r\n                deadline\r\n            );\r\n            const args = [\r\n                outputToken.address,\r\n                lpToken.address,\r\n                amount,\r\n                deduct(await getZapOutSwappedAmount(outputToken, lpToken, amount, provider), zapSlippage),\r\n                amount,\r\n                deadline,\r\n                permit.v,\r\n                permit.r,\r\n                permit.s\r\n            ];\r\n            const gasLimit = await contract.estimateGas.ZapOutWithPermit(...args);\r\n            const tx = await contract.ZapOutWithPermit(...args, {\r\n                gasLimit: gasLimit.mul(120).div(100)\r\n            });\r\n            return logTransaction(tx, \"ZapOut_General_V1.ZapOutWithPermit()\", ...args.map(arg => arg.toString()));\r\n        },\r\n        [getZapOutSwappedAmount]\r\n    );\r\n\r\n    return {\r\n        zapIn,\r\n        zapOut,\r\n        getZapOutSwappedAmount\r\n    };\r\n};\r\n\r\nexport default useZapper;\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport { ROUTER } from \"../constants/contracts\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport Token from \"../types/Token\";\r\nimport { convertToken, formatBalance, isWETH, parseBalance, parseCurrencyAmount } from \"../utils\";\r\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\r\nimport useSwapRouter from \"./useSwapRouter\";\r\nimport useZapper from \"./useZapper\";\r\n\r\nexport interface RemoveLiquidityState extends LPTokensState {\r\n    outputToken?: Token;\r\n    setOutputToken: (token?: Token) => void;\r\n    onRemove: () => Promise<void>;\r\n    removing: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useRemoveLiquidityState: () => RemoveLiquidityState = () => {\r\n    const state = useLPTokensState(\"my-lp-tokens\");\r\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\r\n    const { removeLiquidity, removeLiquidityETH } = useSwapRouter();\r\n    const { zapOut } = useZapper();\r\n    const [loading, setLoading] = useState(false);\r\n    const [outputToken, setOutputToken] = useState<Token>();\r\n    const [removing, setRemoving] = useState(false);\r\n\r\n    /*useEffect(() => {\r\n        setOutputToken(undefined);\r\n    }, [state.selectedLPToken]);\r\n\r\n    useEffect(() => {\r\n        state.setAmount(\"\");\r\n    }, [outputToken]);*/\r\n\r\n    useAsyncEffect(async () => {\r\n        if (signer && state.selectedLPToken) {\r\n            state.setFromSymbol(state.selectedLPToken.tokenA.symbol);\r\n            state.setToSymbol(state.selectedLPToken.tokenB.symbol);\r\n\r\n            setLoading(true);\r\n            state.setSelectedLPTokenAllowed(false);\r\n            try {\r\n                const minAllowance = ethers.BigNumber.from(2)\r\n                    .pow(96)\r\n                    .sub(1);\r\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, ROUTER);\r\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            state.setFromSymbol(\"\");\r\n            state.setToSymbol(\"\");\r\n        }\r\n    }, [signer, state.selectedLPToken]);\r\n\r\n    // tslint:disable-next-line:max-func-body-length\r\n    useAsyncEffect(async () => {\r\n        if (\r\n            state.selectedLPToken &&\r\n            state.selectedLPToken.totalSupply &&\r\n            state.pair &&\r\n            state.fromToken &&\r\n            state.toToken\r\n        ) {\r\n            if (state.pair.liquidityToken.address === state.selectedLPToken.address) {\r\n                const fromReserve = parseCurrencyAmount(\r\n                    state.pair.reserveOf(convertToken(state.fromToken)),\r\n                    state.fromToken.decimals\r\n                );\r\n                const toReserve = parseCurrencyAmount(\r\n                    state.pair.reserveOf(convertToken(state.toToken)),\r\n                    state.toToken.decimals\r\n                );\r\n                state.setFromAmount(\r\n                    formatBalance(\r\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\r\n                            .mul(fromReserve)\r\n                            .div(state.selectedLPToken.totalSupply)\r\n                            .toString(),\r\n                        state.selectedLPToken.tokenA.decimals\r\n                    )\r\n                );\r\n                state.setToAmount(\r\n                    formatBalance(\r\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\r\n                            .mul(toReserve)\r\n                            .div(state.selectedLPToken.totalSupply)\r\n                            .toString(),\r\n                        state.selectedLPToken.tokenB.decimals\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    }, [state.selectedLPToken, state.amount, state.pair, state.fromToken, state.toToken, signer]);\r\n\r\n    const removeFromRouter = async () => {\r\n        if (state.selectedLPToken && signer) {\r\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\r\n            const toAmount = parseBalance(state.toAmount, state.toToken!.decimals);\r\n            const liquidity = parseBalance(state.amount, state.selectedLPToken.decimals);\r\n            if (isWETH(state.fromToken) || isWETH(state.toToken)) {\r\n                const token = isWETH(state.fromToken) ? state.toToken! : state.fromToken!;\r\n                const amountToRemove = isWETH(state.fromToken) ? toAmount : fromAmount;\r\n                const amountToRemoveETH = isWETH(state.fromToken) ? fromAmount : toAmount;\r\n                const tx = await removeLiquidityETH(token, liquidity, amountToRemove, amountToRemoveETH, signer);\r\n                await tx.wait();\r\n            } else {\r\n                const tx = await removeLiquidity(\r\n                    state.fromToken!,\r\n                    state.toToken!,\r\n                    liquidity,\r\n                    fromAmount,\r\n                    toAmount,\r\n                    signer\r\n                );\r\n                await tx.wait();\r\n            }\r\n        }\r\n    };\r\n\r\n    const onRemove = useCallback(async () => {\r\n        if (\r\n            state.fromAmount &&\r\n            state.toAmount &&\r\n            state.selectedLPToken &&\r\n            state.amount &&\r\n            // outputToken &&\r\n            provider &&\r\n            signer\r\n        ) {\r\n            setRemoving(true);\r\n            try {\r\n                // if (outputToken === state.selectedLPToken) {\r\n                await removeFromRouter();\r\n                // } else {\r\n                //     const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\r\n                //     const tx = await zapOut(state.selectedLPToken, outputToken, amount, provider, signer);\r\n                //     await tx.wait();\r\n                // }\r\n                await updateTokens();\r\n                await state.updateLPTokens();\r\n                state.setSelectedLPToken(undefined);\r\n            } finally {\r\n                setRemoving(false);\r\n            }\r\n        }\r\n    }, [\r\n        state.fromAmount,\r\n        state.toAmount,\r\n        state.selectedLPToken,\r\n        state.amount,\r\n        state.updateLPTokens,\r\n        removeFromRouter,\r\n        zapOut,\r\n        updateTokens,\r\n        // outputToken,\r\n        provider,\r\n        signer\r\n    ]);\r\n\r\n    return {\r\n        ...state,\r\n        loading: state.loading || loading,\r\n        outputToken,\r\n        setOutputToken,\r\n        onRemove,\r\n        removing\r\n    };\r\n};\r\n\r\nexport default useRemoveLiquidityState;\r\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\r\nimport { Platform, View } from \"react-native\";\r\n\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport AmountMeta from \"../components/AmountMeta\";\r\nimport ApproveButton from \"../components/ApproveButton\";\r\nimport BackgroundImage from \"../components/BackgroundImage\";\r\nimport Border from \"../components/Border\";\r\nimport Button from \"../components/Button\";\r\nimport ChangeNetwork from \"../components/ChangeNetwork\";\r\nimport CloseIcon from \"../components/CloseIcon\";\r\nimport Container from \"../components/Container\";\r\nimport Content from \"../components/Content\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport FetchingButton from \"../components/FetchingButton\";\r\nimport FlexView from \"../components/FlexView\";\r\nimport Heading from \"../components/Heading\";\r\nimport InfoBox from \"../components/InfoBox\";\r\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\r\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\r\nimport Meta from \"../components/Meta\";\r\nimport Selectable from \"../components/Selectable\";\r\nimport SelectIcon from \"../components/SelectIcon\";\r\nimport Text from \"../components/Text\";\r\nimport Title from \"../components/Title\";\r\nimport TokenInput from \"../components/TokenInput\";\r\nimport TokenLogo from \"../components/TokenLogo\";\r\nimport TokenSymbol from \"../components/TokenSymbol\";\r\nimport WebFooter from \"../components/web/WebFooter\";\r\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\r\nimport { ROUTER } from \"../constants/contracts\";\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useRemoveLiquidityState, { RemoveLiquidityState } from \"../hooks/useRemoveLiquidityState\";\r\nimport { FEE } from \"../hooks/useSwapRouter\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport MetamaskError from \"../types/MetamaskError\";\r\nimport Token from \"../types/Token\";\r\nimport { deduct, formatBalance, isEmptyValue, parseBalance } from \"../utils\";\r\nimport Screen from \"./Screen\";\r\n\r\nconst RemoveLiquidityScreen = () => {\r\n    const t = useTranslation();\r\n    return (\r\n        <Screen>\r\n            <Container>\r\n                <BackgroundImage />\r\n                <Content>\r\n                    <Title text={t(\"remove-liquidity\")} />\r\n                    <Text light={true}>{t(\"remove-liquidity-desc\")}</Text>\r\n                    <RemoveLiquidity />\r\n                </Content>\r\n                {Platform.OS === \"web\" && <WebFooter />}\r\n            </Container>\r\n            <LiquiditySubMenu />\r\n        </Screen>\r\n    );\r\n};\r\n\r\nconst RemoveLiquidity = () => {\r\n    const { chainId } = useContext(EthersContext);\r\n    const t = useTranslation();\r\n    const state = useRemoveLiquidityState();\r\n    if (chainId !== 1) return <ChangeNetwork />;\r\n    return (\r\n        <View style={{ marginTop: Spacing.large }}>\r\n            <LPTokenSelect\r\n                state={state}\r\n                title={t(\"your-liquidity\")}\r\n                emptyText={t(\"you-dont-have-liquidity\")}\r\n                Item={LPTokenItem}\r\n            />\r\n            {/*<Border />*/}\r\n            {/*<OutputTokenSelect state={state} />*/}\r\n            <Border />\r\n            <AmountInput state={state} />\r\n            <AmountInfo state={state} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst OutputTokenSelect = ({ state }: { state: RemoveLiquidityState }) => {\r\n    const t = useTranslation();\r\n    if (!state.selectedLPToken) return <Heading text={t(\"output-tokens\")} disabled={true} />;\r\n    const onSelectToken = (token: Token) => () => state.setOutputToken(state.outputToken ? undefined : token);\r\n    return (\r\n        <View>\r\n            <Heading text={t(\"output-tokens\")} />\r\n            <TokenOutputItem\r\n                token={state.selectedLPToken.tokenA}\r\n                otherToken={state.selectedLPToken.tokenB}\r\n                selected={state.outputToken === state.selectedLPToken.tokenA}\r\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken.tokenA}\r\n                onSelectToken={onSelectToken(state.selectedLPToken.tokenA)}\r\n            />\r\n            <TokenOutputItem\r\n                token={state.selectedLPToken.tokenB}\r\n                otherToken={state.selectedLPToken.tokenA}\r\n                selected={state.outputToken === state.selectedLPToken.tokenB}\r\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken.tokenB}\r\n                onSelectToken={onSelectToken(state.selectedLPToken.tokenB)}\r\n            />\r\n            <LPTokenOutputItem\r\n                token={state.selectedLPToken}\r\n                selected={state.outputToken === state.selectedLPToken}\r\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken}\r\n                onSelectToken={onSelectToken(state.selectedLPToken)}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst TokenOutputItem = (props: {\r\n    token: Token;\r\n    otherToken: Token;\r\n    selected: boolean;\r\n    hidden: boolean;\r\n    onSelectToken: () => void;\r\n}) => {\r\n    const t = useTranslation();\r\n    if (props.hidden) return <View />;\r\n    return (\r\n        <Selectable\r\n            selected={props.selected}\r\n            onPress={props.onSelectToken}\r\n            containerStyle={{\r\n                marginBottom: ITEM_SEPARATOR_HEIGHT\r\n            }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token} />\r\n                <TokenSymbol token={props.token} />\r\n                <Text note={true} style={{ flex: 1, marginLeft: Spacing.tiny }}>\r\n                    {IS_DESKTOP &&\r\n                        t(\"will-be-converted-to\", {\r\n                            fromSymbol: props.otherToken.symbol,\r\n                            toSymbol: props.token.symbol\r\n                        })}\r\n                </Text>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport const LPTokenOutputItem = (props: {\r\n    token: LPToken;\r\n    selected: boolean;\r\n    hidden: boolean;\r\n    onSelectToken: () => void;\r\n}) => {\r\n    if (props.hidden) return <View />;\r\n    return (\r\n        <Selectable\r\n            selected={props.selected}\r\n            onPress={props.onSelectToken}\r\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\r\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\r\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\r\n                    {props.token.tokenA.symbol} + {props.token.tokenB.symbol}\r\n                </Text>\r\n                <View style={{ flex: 1 }} />\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nconst AmountInput = ({ state }: { state: RemoveLiquidityState }) => {\r\n    const t = useTranslation();\r\n    if (!state.selectedLPToken /* || !state.outputToken*/) {\r\n        return <Heading text={t(\"amount-of-tokens\")} disabled={true} />;\r\n    }\r\n    return (\r\n        <TokenInput\r\n            title={t(\"amount-of-tokens\")}\r\n            token={state.selectedLPToken}\r\n            amount={state.amount}\r\n            onAmountChanged={state.setAmount}\r\n        />\r\n    );\r\n};\r\n\r\nconst AmountInfo = ({ state }: { state: RemoveLiquidityState }) => {\r\n    const t = useTranslation();\r\n    const disabled = !state.selectedLPToken || !state.fromToken || !state.toToken;\r\n    const outputAmount = useMemo(() => {\r\n        if (state.fromToken && state.outputToken === state.fromToken) {\r\n            const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\r\n            return formatBalance(amount.add(deduct(amount, FEE)), state.fromToken.decimals);\r\n        } else if (state.toToken && state.outputToken === state.toToken) {\r\n            const amount = parseBalance(state.toAmount, state.toToken.decimals);\r\n            return formatBalance(amount.add(deduct(amount, FEE)), state.toToken.decimals);\r\n        }\r\n    }, [state.outputToken, state.fromToken, state.toToken, state.fromAmount, state.toAmount]);\r\n    return (\r\n        <InfoBox>\r\n            {(state.outputToken === state.fromToken || state.outputToken === state.toToken) && (\r\n                <AmountMeta amount={outputAmount} suffix={state.outputToken?.symbol} disabled={disabled} />\r\n            )}\r\n            <Meta\r\n                label={state.fromToken ? state.fromToken.symbol : t(\"1st-token\")}\r\n                text={state.fromAmount}\r\n                disabled={disabled}\r\n            />\r\n            <Meta\r\n                label={state.toToken ? state.toToken.symbol : t(\"2nd-token\")}\r\n                text={state.toAmount}\r\n                disabled={disabled}\r\n            />\r\n            <Controls state={state} />\r\n        </InfoBox>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst Controls = ({ state }: { state: RemoveLiquidityState }) => {\r\n    const [error, setError] = useState<MetamaskError>({});\r\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\r\n    const approveRequired = /*state.outputToken === state.selectedLPToken && */ !state.selectedLPTokenAllowed;\r\n    const disabled = approveRequired || isEmptyValue(state.amount);\r\n    return (\r\n        <View style={{ marginTop: Spacing.normal }}>\r\n            {!state.selectedLPToken || isEmptyValue(state.amount) ? (\r\n                <RemoveButton state={state} onError={setError} disabled={true} />\r\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\r\n            ) : state.loading || !state.pair ? (\r\n                <FetchingButton />\r\n            ) : (\r\n                <>\r\n                    <ApproveButton\r\n                        token={state.selectedLPToken}\r\n                        spender={ROUTER}\r\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\r\n                        onError={setError}\r\n                        hidden={!approveRequired}\r\n                    />\r\n                    <RemoveButton state={state} onError={setError} disabled={disabled} />\r\n                </>\r\n            )}\r\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst RemoveButton = ({\r\n    state,\r\n    onError,\r\n    disabled\r\n}: {\r\n    state: RemoveLiquidityState;\r\n    onError: (e) => void;\r\n    disabled: boolean;\r\n}) => {\r\n    const t = useTranslation();\r\n    const onPress = useCallback(() => {\r\n        onError({});\r\n        state.onRemove().catch(onError);\r\n    }, [state.onRemove, onError]);\r\n    return <Button title={t(\"remove-liquidity\")} disabled={disabled} loading={state.removing} onPress={onPress} />;\r\n};\r\n\r\nexport default RemoveLiquidityScreen;\r\n"],"sourceRoot":""}