{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/Notice.tsx","src/components/TokenSymbol.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/components/Select.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/UnsupportedButton.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","TokenSymbol","medium","caption","marginLeft","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenAmount","formatBalance","balance","decimals","TokenName","numberOfLines","ellipsizeMode","small","width","name","Item","ITEM_SEPARATOR_HEIGHT","paddingLeft","paddingRight","selected","selectable","setOption","undefined","option","alignItems","flex","description","Select","expanded","onExpand","options","map","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","UnsupportedButton","state","fromSymbol","toSymbol","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","FlexView","TokenLogo","View","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","onChangeSymbol","includes","useSwapState","useTokenPairState","chainId","signer","updateTokens","getTrade","useSDK","useSwapRouter","swap","calculateSwapFee","useSettlement","calculateLimitOrderFee","calculateLimitOrderReturn","createOrder","orderType","setOrderType","trade","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","setFromSymbol","isEmptyValue","fromAmount","useDelayedOnBlockEffect","block","p","ALCHEMY_PROVIDER","fromToken","toToken","parseBalance","sub","onSwap","result","onCreateOrder","amountIn","Fraction","parse","apply","mul","pow10","div","limitOrderUnsupported","isETH","Swap","ChangeNetwork","large","Border","OrderTypeSelect","FromTokenSelect","customTokens","Heading","ETH","ToTokenSelect","limit","setToSymbol","AmountInput","TokenInput","onAmountChanged","setFromAmount","PriceInput","marketPrice","executionPrice","toFixed","constants","Zero","maxButtonText","LimitOrderUnsupportedNotice","marginVertical","NoPairNotice","TradeInfo","isETHWETHPair","onGetKeth","useLinker","InfoBox","WrapInfo","SwapInfo","outputAmount","price","impact","priceImpact","Meta","label","SwapControls","error","setError","approveRequired","fromTokenAllowed","gt","isWETH","FetchingButton","ROUTER","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","LimitOrderInfo","d","LimitOrderControls","allowed","setAllowed","erc20","getContract","allowance","SETTLEMENT","BigNumber","from","gte","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/8.d0f78a71.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface AmountMetaProps {\r\n    amount?: string;\r\n    suffix?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst AmountMeta: FC<AmountMetaProps> = props => {\r\n    const t = useTranslation();\r\n    const { textDark, textLight, placeholder } = useColors();\r\n    return (\r\n        <Text\r\n            style={{\r\n                fontSize: IS_DESKTOP ? 28 : 20,\r\n                marginBottom: Spacing.normal,\r\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\r\n            }}>\r\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default AmountMeta;\r\n","import React from \"react\";\r\n\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Button from \"./Button\";\r\n\r\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\r\n    const t = useTranslation();\r\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\r\n};\r\nexport default InsufficientBalanceButton;\r\n","import React, { FC, useCallback, useContext, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport Button from \"./Button\";\r\n\r\nexport interface ApproveButtonProps {\r\n    token: Token;\r\n    spender: string;\r\n    onSuccess: () => void;\r\n    onError: (e) => void;\r\n    hidden?: boolean;\r\n}\r\n\r\nconst ApproveButton: FC<ApproveButtonProps> = props => {\r\n    const t = useTranslation();\r\n    const { approveToken } = useContext(EthersContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const onPress = useCallback(async () => {\r\n        if (props.token) {\r\n            props.onError({});\r\n            setLoading(true);\r\n            try {\r\n                const tx = await approveToken(props.token.address, props.spender);\r\n                if (tx) {\r\n                    await tx.wait();\r\n                    props.onSuccess();\r\n                }\r\n            } catch (e) {\r\n                props.onError(e);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [props.token]);\r\n    if (props.hidden) return <View />;\r\n    return (\r\n        <Button\r\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\r\n            onPress={onPress}\r\n            loading={loading}\r\n            containerStyle={{ marginBottom: Spacing.tiny }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ApproveButton;\r\n","import React from \"react\";\r\nimport { View, ViewStyle } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useStyles from \"../hooks/useStyles\";\r\nimport Button from \"./Button\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface NoticeProps {\r\n    text: string;\r\n    clear?: boolean;\r\n    color?: string;\r\n    buttonText?: string;\r\n    onPressButton?: () => void;\r\n    style?: ViewStyle;\r\n}\r\n\r\nconst Notice = (props: NoticeProps) => {\r\n    const { textLight } = useColors();\r\n    const { border } = useStyles();\r\n    const borderStyle = border({ color: props.color });\r\n    const color = props.color || textLight;\r\n    return (\r\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\r\n            <Text note={true} style={{ color }}>\r\n                {props.text}\r\n            </Text>\r\n            {props.buttonText && props.onPressButton && (\r\n                <Button\r\n                    title={props.buttonText}\r\n                    type={\"clear\"}\r\n                    size={\"small\"}\r\n                    fontWeight={\"bold\"}\r\n                    onPress={props.onPressButton}\r\n                    titleStyle={{ color }}\r\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\r\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\r\n                />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Notice;\r\n","import React from \"react\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\r\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\r\n        {props.token.symbol}\r\n    </Text>\r\n);\r\n\r\nexport default TokenSymbol;\r\n","import useAsyncEffect from \"use-async-effect\";\r\n\r\nconst handles = {};\r\n\r\nconst useDelayedEffect = (\r\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\r\n    timeout: number,\r\n    inputs?: any[]\r\n) => {\r\n    const key = effect.toString();\r\n    useAsyncEffect<number>(\r\n        () => {\r\n            const handle = setTimeout(effect, timeout);\r\n            handles[key] = handle;\r\n            return handle;\r\n        },\r\n        handle => {\r\n            clearTimeout(handle);\r\n        },\r\n        inputs\r\n    );\r\n};\r\nexport default useDelayedEffect;\r\n","import React from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { IS_DESKTOP } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport { formatBalance } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\r\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\r\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\r\n    </Text>\r\n);\r\n\r\nexport default TokenAmount;\r\n","import React from \"react\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\r\n    <Text\r\n        caption={true}\r\n        numberOfLines={1}\r\n        ellipsizeMode={\"tail\"}\r\n        style={{ marginLeft: Spacing.small, width: 180 }}\r\n        disabled={props.disabled}>\r\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\r\n    </Text>\r\n);\r\n\r\nexport default TokenName;\r\n","import React, { FC } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport CloseIcon from \"./CloseIcon\";\r\nimport Expandable from \"./Expandable\";\r\nimport FlexView from \"./FlexView\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Selectable from \"./Selectable\";\r\nimport SelectIcon from \"./SelectIcon\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface Option {\r\n    key: string;\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SelectProps {\r\n    title: string;\r\n    options: Option[];\r\n    option?: Option;\r\n    setOption: (option?: Option) => void;\r\n}\r\n\r\nconst Select: FC<SelectProps> = props => {\r\n    return (\r\n        <View>\r\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\r\n                {props.options.map(option => (\r\n                    <Item\r\n                        key={option.key}\r\n                        option={option}\r\n                        setOption={props.setOption}\r\n                        selected={option.key === props.option?.key}\r\n                    />\r\n                ))}\r\n            </Expandable>\r\n            {props.option && (\r\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst Item = (props: {\r\n    option: Option;\r\n    setOption?: (option?: Option) => void;\r\n    selected: boolean;\r\n    selectable?: boolean;\r\n}) => {\r\n    return (\r\n        <Selectable\r\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\r\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\r\n            selected={props.selected}\r\n            disabled={props.selectable}\r\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\r\n                    <Text note={true} style={{ marginTop: 4 }}>\r\n                        {props.option.description}\r\n                    </Text>\r\n                </View>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport { formatUSD } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface TokenPriceProps {\r\n    token: TokenWithValue;\r\n    disabled?: boolean;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst TokenPrice: FC<TokenPriceProps> = props => {\r\n    return (\r\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\r\n            {formatUSD(props.token.priceUSD || 0, 4)}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default TokenPrice;\r\n","import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport { formatUSD } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface TokenValueProps {\r\n    token: TokenWithValue;\r\n    disabled?: boolean;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst TokenValue: FC<TokenValueProps> = props => {\r\n    return (\r\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\r\n            {formatUSD(props.token.valueUSD || 0, 4)}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default TokenValue;\r\n","import React from \"react\";\r\n\r\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Button from \"./Button\";\r\n\r\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\r\n    const t = useTranslation();\r\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\r\n};\r\n\r\nexport default UnsupportedButton;\r\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { ActivityIndicator, View } from \"react-native\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\r\nimport useStyles from \"../hooks/useStyles\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\r\nimport Button from \"./Button\";\r\nimport FlexView from \"./FlexView\";\r\nimport Input from \"./Input\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Selectable from \"./Selectable\";\r\nimport TokenLogo from \"./TokenLogo\";\r\nimport TokenName from \"./TokenName\";\r\n\r\nexport interface TokenSearchProps {\r\n    tokens?: Token[];\r\n    text: string;\r\n    onChangeText: (text: string) => void;\r\n    onAddToken?: (token: Token) => void;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst TokenSearch: FC<TokenSearchProps> = props => {\r\n    const t = useTranslation();\r\n    const { border } = useStyles();\r\n    const { provider, tokens } = useContext(EthersContext);\r\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\r\n    const [loading, setLoading] = useState(false);\r\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\r\n    if (!props.tokens) return <View />;\r\n    useEffect(() => {\r\n        if (props.text === \"\") {\r\n            setLoading(false);\r\n            setTokenToAdd(undefined);\r\n        }\r\n    }, [props.text]);\r\n    useDelayedEffect(\r\n        async () => {\r\n            const address = props.text.trim();\r\n            if (provider && ethers.utils.isAddress(address)) {\r\n                setLoading(true);\r\n                try {\r\n                    const token = await findOrFetchToken(address, provider);\r\n                    if (token.name && token.symbol && token.decimals) {\r\n                        setTokenToAdd(token as Token);\r\n                    }\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n        300,\r\n        [provider, props.text]\r\n    );\r\n    return (\r\n        <View>\r\n            <FlexView style={{ marginBottom: Spacing.small }}>\r\n                <Input\r\n                    value={props.text}\r\n                    onChangeText={props.onChangeText}\r\n                    placeholder={t(\"token-name-symbol-or-address\")}\r\n                    autoFocus={IS_DESKTOP}\r\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\r\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\r\n                    labelStyle={{ height: 0 }}\r\n                    containerStyle={{\r\n                        ...border(),\r\n                        paddingHorizontal: Spacing.tiny,\r\n                        paddingTop: 12,\r\n                        paddingBottom: 0\r\n                    }}\r\n                />\r\n                {props.onAddToken && loading && <Loading />}\r\n            </FlexView>\r\n            {props.onAddToken && tokenToAdd && (\r\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\r\n\r\nconst TokenItem = (props: {\r\n    token: Token;\r\n    selected: boolean;\r\n    onSelectToken: (token: Token) => void;\r\n    duplicate: boolean;\r\n}) => {\r\n    const t = useTranslation();\r\n    const { accent } = useColors();\r\n    const onPress = useCallback(() => {\r\n        props.onSelectToken(props.token);\r\n    }, [props.onSelectToken, props.token]);\r\n    return (\r\n        <Selectable\r\n            selected={false}\r\n            disabled={true}\r\n            onPress={onPress}\r\n            containerStyle={{\r\n                marginBottom: ITEM_SEPARATOR_HEIGHT\r\n            }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token} />\r\n                <TokenName token={props.token} />\r\n                <View style={{ flex: 1 }} />\r\n                <Button\r\n                    type={\"clear\"}\r\n                    size={\"small\"}\r\n                    color={accent}\r\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\r\n                    fontWeight={\"bold\"}\r\n                    onPress={onPress}\r\n                    disabled={props.duplicate}\r\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\r\n                />\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport default TokenSearch;\r\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { FlatList, View, ViewStyle } from \"react-native\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport CloseIcon from \"./CloseIcon\";\r\nimport Expandable from \"./Expandable\";\r\nimport FlexView from \"./FlexView\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Loading from \"./Loading\";\r\nimport Selectable from \"./Selectable\";\r\nimport SelectIcon from \"./SelectIcon\";\r\nimport Text from \"./Text\";\r\nimport TokenAmount from \"./TokenAmount\";\r\nimport TokenLogo from \"./TokenLogo\";\r\nimport TokenName from \"./TokenName\";\r\nimport TokenPrice from \"./TokenPrice\";\r\nimport TokenSearch from \"./TokenSearch\";\r\nimport TokenSymbol from \"./TokenSymbol\";\r\nimport TokenValue from \"./TokenValue\";\r\n\r\nexport interface TokenSelectProps {\r\n    title: string;\r\n    symbol: string;\r\n    onChangeSymbol: (symbol: string) => void;\r\n    disabled?: (token: Token) => boolean;\r\n    hidden?: (token: Token) => boolean;\r\n    style?: ViewStyle;\r\n}\r\n\r\nconst TokenSelect: FC<TokenSelectProps> = props => {\r\n    const { tokens, addCustomToken } = useContext(EthersContext);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [query, setQuery] = useState(\"\");\r\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\r\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\r\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\r\n    const onAddToken = async (t: Token) => {\r\n        await addCustomToken(t);\r\n        setSearch(\"\");\r\n        setQuery(\"\");\r\n        props.onChangeSymbol(t.symbol);\r\n    };\r\n    const hidden = (t: Token) => {\r\n        if (query.length > 0) {\r\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\r\n        }\r\n        return props.hidden?.(t) || false;\r\n    };\r\n    useEffect(() => setSearch(\"\"), [props.symbol]);\r\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\r\n    return (\r\n        <View style={props.style}>\r\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\r\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\r\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\r\n            </Expandable>\r\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst TokenList = (props: {\r\n    onSelectToken: (token: Token) => void;\r\n    disabled?: (token: Token) => boolean;\r\n    hidden?: (token: Token) => boolean;\r\n}) => {\r\n    const { loadingTokens, tokens } = useContext(EthersContext);\r\n    const renderItem = useCallback(\r\n        ({ item }) => {\r\n            return (\r\n                <TokenItem\r\n                    key={item.address}\r\n                    token={item}\r\n                    selected={false}\r\n                    onSelectToken={props.onSelectToken}\r\n                    disabled={props.disabled?.(item)}\r\n                />\r\n            );\r\n        },\r\n        [props.onSelectToken, props.disabled]\r\n    );\r\n    const data = useMemo(\r\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\r\n        [tokens, props.hidden]\r\n    );\r\n    return loadingTokens ? (\r\n        <Loading />\r\n    ) : data.length === 0 ? (\r\n        <EmptyList />\r\n    ) : (\r\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\r\n    );\r\n};\r\n\r\nconst EmptyList = () => {\r\n    const t = useTranslation();\r\n    return (\r\n        <View style={{ margin: Spacing.normal }}>\r\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                {t(\"you-dont-have-assets\")}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst TokenItem = (props: {\r\n    token: TokenWithValue;\r\n    selected: boolean;\r\n    onSelectToken: (token: Token) => void;\r\n    disabled?: boolean;\r\n    selectable?: boolean;\r\n}) => {\r\n    const onPress = useCallback(() => {\r\n        props.onSelectToken(props.token);\r\n    }, [props.onSelectToken, props.token]);\r\n    return (\r\n        <Selectable\r\n            selected={props.selected}\r\n            onPress={onPress}\r\n            disabled={props.disabled || props.selectable}\r\n            containerStyle={{\r\n                marginBottom: ITEM_SEPARATOR_HEIGHT\r\n            }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token} disabled={props.disabled} />\r\n                <View>\r\n                    {props.token.priceUSD !== null && (\r\n                        <TokenPrice\r\n                            token={props.token}\r\n                            disabled={props.disabled}\r\n                            style={{ marginLeft: Spacing.small }}\r\n                        />\r\n                    )}\r\n                    <TokenName token={props.token} disabled={props.disabled} />\r\n                </View>\r\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\r\n                    <FlexView>\r\n                        <TokenAmount\r\n                            token={props.token}\r\n                            disabled={props.disabled}\r\n                            style={{ flex: 1, textAlign: \"right\" }}\r\n                        />\r\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\r\n                    </FlexView>\r\n                </View>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\r\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\r\n    const value2 = t2?.valueUSD || 0;\r\n    const value1 = t1?.valueUSD || 1;\r\n    if (value2 === value1) {\r\n        return (\r\n            (t2.balance.isZero() ? 0 : 10000000000) -\r\n            (t1.balance.isZero() ? 0 : 10000000000) +\r\n            t1.symbol.localeCompare(t2.symbol)\r\n        );\r\n    }\r\n    return value2 - value1;\r\n};\r\n\r\nexport default TokenSelect;\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Trade } from \"@sushiswap/sdk\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport Fraction from \"../constants/Fraction\";\r\nimport { ALCHEMY_PROVIDER, EthersContext } from \"../context/EthersContext\";\r\nimport { formatBalance, isEmptyValue, isETH, parseBalance, pow10 } from \"../utils\";\r\nimport useDelayedEffect from \"./useDelayedEffect\";\r\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\r\nimport useSDK from \"./useSDK\";\r\nimport useSettlement from \"./useSettlement\";\r\nimport useSwapRouter from \"./useSwapRouter\";\r\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\r\n\r\nexport type OrderType = \"market\" | \"limit\";\r\n\r\nexport interface SwapState extends TokenPairState {\r\n    orderType?: OrderType;\r\n    setOrderType: (orderType?: OrderType) => void;\r\n    trade?: Trade;\r\n    unsupported: boolean;\r\n    limitOrderUnsupported: boolean;\r\n    limitOrderPrice: string;\r\n    setLimitOrderPrice: (price: string) => void;\r\n    swapFee: string;\r\n    limitOrderFee: string;\r\n    limitOrderSwapFee: string;\r\n    limitOrderReturn: string;\r\n    onSwap: () => Promise<void>;\r\n    swapping: boolean;\r\n    onCreateOrder: () => Promise<void>;\r\n    creatingOrder: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useSwapState: () => SwapState = () => {\r\n    const state = useTokenPairState();\r\n    const { chainId, provider, signer, updateTokens } = useContext(EthersContext);\r\n    const { getTrade } = useSDK();\r\n    const { swap, calculateSwapFee } = useSwapRouter();\r\n    const { calculateLimitOrderFee, calculateLimitOrderReturn } = useSettlement();\r\n    const { createOrder } = useSettlement();\r\n    const [loading, setLoading] = useState(true);\r\n    const [orderType, setOrderType] = useState<OrderType>();\r\n    const [trade, setTrade] = useState<Trade>();\r\n    const [unsupported, setUnsupported] = useState(false);\r\n    const [swapFee, setSwapFee] = useState(\"\");\r\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\r\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\r\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\r\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\r\n    const [swapping, setSwapping] = useState(false);\r\n    const [creatingOrder, setCreatingOrder] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderType) {\r\n            state.setFromSymbol(\"\");\r\n        }\r\n        setLimitOrderPrice(\"\");\r\n    }, [orderType]);\r\n\r\n    useDelayedEffect(\r\n        () => {\r\n            if (isEmptyValue(state.fromAmount)) {\r\n                setLimitOrderPrice(\"\");\r\n                setTrade(undefined);\r\n            }\r\n        },\r\n        300,\r\n        [state.fromAmount]\r\n    );\r\n\r\n    useDelayedOnBlockEffect(\r\n        async block => {\r\n            if (!block) {\r\n                setLoading(true);\r\n            }\r\n            const p = chainId === 1 ? provider : ALCHEMY_PROVIDER;\r\n            if (state.fromToken && state.toToken && state.fromAmount && p) {\r\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\r\n                if (!amount.isZero()) {\r\n                    setUnsupported(false);\r\n                    try {\r\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, p));\r\n                    } catch (e) {\r\n                        setUnsupported(true);\r\n                    } finally {\r\n                        setLoading(false);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\r\n        [chainId, provider, state.fromToken, state.toToken, state.fromAmount]\r\n    );\r\n\r\n    useAsyncEffect(() => {\r\n        if (trade && !isEmptyValue(state.fromAmount)) {\r\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\r\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\r\n            if (orderType === \"limit\") {\r\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\r\n                setLimitOrderSwapFee(\r\n                    formatBalance(\r\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\r\n                        state.fromToken!.decimals,\r\n                        8\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    }, [orderType, trade, state.fromAmount]);\r\n\r\n    useAsyncEffect(() => {\r\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\r\n            setLimitOrderReturn(\r\n                formatBalance(\r\n                    calculateLimitOrderReturn(\r\n                        state.fromToken,\r\n                        state.toToken,\r\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\r\n                        limitOrderPrice\r\n                    ),\r\n                    state.toToken.decimals\r\n                )\r\n            );\r\n        }\r\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\r\n\r\n    const onSwap = useCallback(async () => {\r\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\r\n            setSwapping(true);\r\n            try {\r\n                const result = await swap(trade, signer);\r\n                if (result) {\r\n                    await result.tx.wait();\r\n                    await updateTokens();\r\n                    setTrade(undefined);\r\n                    setOrderType(undefined);\r\n                }\r\n            } finally {\r\n                setSwapping(false);\r\n            }\r\n        }\r\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\r\n\r\n    const onCreateOrder = useCallback(async () => {\r\n        if (state.fromToken && state.toToken && state.fromAmount && !isEmptyValue(limitOrderPrice) && signer) {\r\n            setCreatingOrder(true);\r\n            try {\r\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\r\n                const tx = await createOrder(\r\n                    state.fromToken,\r\n                    state.toToken,\r\n                    amountIn,\r\n                    Fraction.parse(limitOrderPrice)\r\n                        .apply(amountIn)\r\n                        .mul(pow10(state.toToken.decimals))\r\n                        .div(pow10(state.fromToken.decimals)),\r\n                    signer\r\n                );\r\n                await tx.wait();\r\n                setTrade(undefined);\r\n                setOrderType(undefined);\r\n            } finally {\r\n                setCreatingOrder(false);\r\n            }\r\n        }\r\n    }, [chainId, state.fromToken, state.toToken, state.fromAmount, signer, limitOrderPrice]);\r\n\r\n    return {\r\n        ...state,\r\n        loading: loading || state.loading,\r\n        orderType,\r\n        setOrderType,\r\n        trade,\r\n        unsupported,\r\n        swapFee,\r\n        limitOrderPrice,\r\n        setLimitOrderPrice,\r\n        limitOrderFee,\r\n        limitOrderSwapFee,\r\n        limitOrderReturn,\r\n        onSwap,\r\n        swapping,\r\n        limitOrderUnsupported: orderType === \"limit\" && (isETH(state.fromToken) || isETH(state.toToken)),\r\n        onCreateOrder,\r\n        creatingOrder\r\n    };\r\n};\r\n\r\nexport default useSwapState;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Platform, View } from \"react-native\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport AmountMeta from \"../components/AmountMeta\";\r\nimport ApproveButton from \"../components/ApproveButton\";\r\nimport BackgroundImage from \"../components/BackgroundImage\";\r\nimport Border from \"../components/Border\";\r\nimport Button from \"../components/Button\";\r\nimport ChangeNetwork from \"../components/ChangeNetwork\";\r\nimport Container from \"../components/Container\";\r\nimport Content from \"../components/Content\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport FetchingButton from \"../components/FetchingButton\";\r\nimport Heading from \"../components/Heading\";\r\nimport InfoBox from \"../components/InfoBox\";\r\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\r\nimport Meta from \"../components/Meta\";\r\nimport Notice from \"../components/Notice\";\r\nimport Select, { Option } from \"../components/Select\";\r\nimport Text from \"../components/Text\";\r\nimport Title from \"../components/Title\";\r\nimport TokenInput from \"../components/TokenInput\";\r\nimport TokenSelect from \"../components/TokenSelect\";\r\nimport UnsupportedButton from \"../components/UnsupportedButton\";\r\nimport WebFooter from \"../components/web/WebFooter\";\r\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\r\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport Fraction from \"../constants/Fraction\";\r\nimport { ALCHEMY_PROVIDER, EthersContext } from \"../context/EthersContext\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\r\nimport useLinker from \"../hooks/useLinker\";\r\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport MetamaskError from \"../types/MetamaskError\";\r\nimport Token from \"../types/Token\";\r\nimport { getContract, isEmptyValue, isETH, isETHWETHPair, isWETH, parseBalance } from \"../utils\";\r\nimport Screen from \"./Screen\";\r\n\r\nconst SwapScreen = () => {\r\n    const t = useTranslation();\r\n    return (\r\n        <Screen>\r\n            <Container>\r\n                <BackgroundImage />\r\n                <Content>\r\n                    <Title text={t(\"new-order\")} />\r\n                    <Text light={true}>{t(\"new-order-desc\")}</Text>\r\n                    <Swap />\r\n                </Content>\r\n                {Platform.OS === \"web\" && <WebFooter />}\r\n            </Container>\r\n            <SwapSubMenu />\r\n        </Screen>\r\n    );\r\n};\r\n\r\nconst Swap = () => {\r\n    const { chainId } = useContext(EthersContext);\r\n    const state = useSwapState();\r\n    if (chainId !== 1 && chainId !== 42) return <ChangeNetwork />;\r\n    return (\r\n        <View style={{ marginTop: Spacing.large }}>\r\n            <OrderTypeSelect state={state} />\r\n            <Border />\r\n            <FromTokenSelect state={state} />\r\n            <Border />\r\n            <ToTokenSelect state={state} />\r\n            <Border />\r\n            <AmountInput state={state} />\r\n            {state.orderType === \"limit\" && (\r\n                <View style={{ marginTop: Spacing.small }}>\r\n                    <Border />\r\n                    <PriceInput state={state} />\r\n                </View>\r\n            )}\r\n            {!state.loading && !state.trade && <NoPairNotice state={state} />}\r\n            <TradeInfo state={state} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\r\n    const t = useTranslation();\r\n    const options: Option[] = [\r\n        { key: \"market\", title: t(\"market-order\"), description: t(\"market-order-desc\") },\r\n        { key: \"limit\", title: t(\"limit-order\"), description: t(\"limit-order-desc\") }\r\n    ];\r\n    return (\r\n        <>\r\n            <Select\r\n                title={t(\"order-type\")}\r\n                options={options}\r\n                option={options.find(option => option.key === state.orderType)}\r\n                setOption={option => state.setOrderType(option?.key as OrderType | undefined)}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\r\n    const t = useTranslation();\r\n    const { tokens, customTokens } = useContext(EthersContext);\r\n    if (!state.orderType) {\r\n        return <Heading text={t(\"token-to-sell\")} disabled={true} />;\r\n    }\r\n    const ETH = tokens ? tokens.find(token => isETH(token)) : null;\r\n    return (\r\n        <View>\r\n            <TokenSelect\r\n                title={t(\"token-to-sell\")}\r\n                symbol={state.fromSymbol}\r\n                onChangeSymbol={state.setFromSymbol}\r\n                hidden={token =>\r\n                    (!customTokens.find(tk => tk.address === token.address) && token.balance.isZero()) ||\r\n                    (state.orderType === \"limit\" && isETH(token))\r\n                }\r\n            />\r\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\r\n                <LimitOrderUnsupportedNotice />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\r\n    const t = useTranslation();\r\n    if (!state.orderType || !state.fromSymbol) {\r\n        return <Heading text={t(\"token-to-buy\")} disabled={true} />;\r\n    }\r\n    const limit = state.orderType === \"limit\";\r\n    const onChangeSymbol = (symbol: string) => {\r\n        state.setToSymbol(limit && symbol === \"ETH\" ? \"WETH\" : symbol);\r\n    };\r\n    return (\r\n        <View>\r\n            <TokenSelect\r\n                title={t(\"token-to-buy\")}\r\n                symbol={state.toSymbol}\r\n                onChangeSymbol={onChangeSymbol}\r\n                hidden={token => token.symbol === state.fromSymbol || (limit && isETH(token))}\r\n            />\r\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst AmountInput = ({ state }: { state: SwapState }) => {\r\n    const t = useTranslation();\r\n    if (!state.fromSymbol || !state.toSymbol) {\r\n        return <Heading text={t(\"amount\")} disabled={true} />;\r\n    }\r\n    return (\r\n        <View>\r\n            <Heading text={state.fromSymbol + \" \" + t(\"amount\")} />\r\n            <TokenInput\r\n                token={state.fromToken}\r\n                amount={state.fromAmount}\r\n                onAmountChanged={state.setFromAmount}\r\n                autoFocus={IS_DESKTOP}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst PriceInput = ({ state }: { state: SwapState }) => {\r\n    const t = useTranslation();\r\n    if (!state.fromSymbol || !state.toSymbol) {\r\n        return <Heading text={t(\"minimum-price\")} disabled={true} />;\r\n    }\r\n    const marketPrice =\r\n        state.toToken && state.trade\r\n            ? parseBalance(state.trade.executionPrice.toFixed(state.toToken.decimals), state.toToken.decimals)\r\n            : ethers.constants.Zero;\r\n    return (\r\n        <TokenInput\r\n            title={t(\"minimum-price\") + \" (\" + state.fromSymbol + \"/\" + state.toSymbol + \")\"}\r\n            token={\r\n                {\r\n                    ...state.toToken,\r\n                    balance: marketPrice\r\n                } as Token\r\n            }\r\n            amount={state.limitOrderPrice}\r\n            onAmountChanged={state.setLimitOrderPrice}\r\n            maxButtonText={t(\"-market-\")}\r\n        />\r\n    );\r\n};\r\n\r\nconst LimitOrderUnsupportedNotice = () => {\r\n    const { placeholder } = useColors();\r\n    const t = useTranslation();\r\n    return (\r\n        <Notice\r\n            text={t(\"eth-not-supported-for-limit-orders\")}\r\n            color={placeholder}\r\n            clear={true}\r\n            style={{ marginVertical: Spacing.small, marginHorizontal: Spacing.tiny }}\r\n        />\r\n    );\r\n};\r\n\r\nconst NoPairNotice = ({ state }: { state: SwapState }) => {\r\n    const t = useTranslation();\r\n    return (\r\n        <Notice\r\n            text={t(\"pair-not-created\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\r\n            color={\"red\"}\r\n            style={{ marginTop: Spacing.normal }}\r\n        />\r\n    );\r\n};\r\n\r\nconst TradeInfo = ({ state }: { state: SwapState }) => {\r\n    const { chainId } = useContext(EthersContext);\r\n    const t = useTranslation();\r\n    if (isETHWETHPair(state.fromToken, state.toToken)) return <WrapInfo state={state} />;\r\n    const disabled =\r\n        state.fromSymbol === \"\" ||\r\n        state.toSymbol === \"\" ||\r\n        isEmptyValue(state.fromAmount) ||\r\n        (state.orderType === \"limit\" && isETH(state.fromToken)) ||\r\n        (!state.loading && !state.trade);\r\n    const onGetKeth = useLinker(\"https://faucet.kovan.network/\", \"\", \"_blank\");\r\n    return (\r\n        <InfoBox>\r\n            {state.orderType === \"limit\" ? (\r\n                <>\r\n                    <LimitOrderInfo state={state} />\r\n                    {chainId === 42 && (\r\n                        <Notice\r\n                            text={t(\"get-free-keth-here\")}\r\n                            buttonText={t(\"get-keth\")}\r\n                            onPressButton={onGetKeth}\r\n                            color={\"orange\"}\r\n                            style={{ marginTop: Spacing.small }}\r\n                        />\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <SwapInfo state={state} disabled={disabled} />\r\n            )}\r\n        </InfoBox>\r\n    );\r\n};\r\n\r\nconst WrapInfo = ({ state }: { state: SwapState }) => {\r\n    const disabled = isEmptyValue(state.fromAmount);\r\n    return (\r\n        <InfoBox>\r\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\r\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\r\n            </Text>\r\n            <SwapControls state={state} />\r\n        </InfoBox>\r\n    );\r\n};\r\n\r\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\r\n    const t = useTranslation();\r\n    const amount = state.trade?.outputAmount?.toFixed();\r\n    const price = state.trade?.executionPrice?.toFixed();\r\n    const impact = state.trade?.priceImpact?.toFixed(2);\r\n    return (\r\n        <View>\r\n            <AmountMeta amount={amount} suffix={state.toSymbol} disabled={disabled} />\r\n            <Meta\r\n                label={t(\"price\")}\r\n                text={price}\r\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\r\n                disabled={disabled}\r\n            />\r\n            <Meta label={t(\"price-impact\")} text={impact} suffix={\"%\"} disabled={disabled} />\r\n            <Meta label={t(\"fee-amount\")} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\r\n            <SwapControls state={state} />\r\n        </View>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst SwapControls = ({ state }: { state: SwapState }) => {\r\n    const [error, setError] = useState<MetamaskError>({});\r\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\r\n    const approveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\r\n    return (\r\n        <View style={{ marginTop: Spacing.normal }}>\r\n            {!state.fromToken ||\r\n            !state.toToken ||\r\n            isEmptyValue(state.fromAmount) ||\r\n            (!state.loading && !state.trade) ? (\r\n                <SwapButton state={state} onError={setError} disabled={true} />\r\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\r\n            ) : isWETH(state.fromToken) && isETH(state.toToken) ? (\r\n                <UnwrapButton state={state} onError={setError} />\r\n            ) : isETH(state.fromToken) && isWETH(state.toToken) ? (\r\n                <WrapButton state={state} onError={setError} />\r\n            ) : state.unsupported ? (\r\n                <UnsupportedButton state={state} />\r\n            ) : state.loading || !state.trade ? (\r\n                <FetchingButton />\r\n            ) : (\r\n                <>\r\n                    <ApproveButton\r\n                        token={state.fromToken}\r\n                        spender={ROUTER}\r\n                        onSuccess={() => state.setFromTokenAllowed(true)}\r\n                        onError={setError}\r\n                        hidden={!approveRequired}\r\n                    />\r\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\r\n                </>\r\n            )}\r\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\r\n    const t = useTranslation();\r\n    const onPress = useCallback(() => {\r\n        onError({});\r\n        state.onSwap().catch(onError);\r\n    }, [state.onSwap, onError]);\r\n    return (\r\n        <Button\r\n            title={t(\"swap-\", {\r\n                symbol: state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\"\r\n            })}\r\n            disabled={disabled}\r\n            loading={state.swapping}\r\n            onPress={onPress}\r\n        />\r\n    );\r\n};\r\n\r\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\r\n    const t = useTranslation();\r\n    const onPress = useCallback(async () => {\r\n        onError({});\r\n        state.onWrap().catch(onError);\r\n    }, []);\r\n    return <Button title={t(\"wrap\")} loading={state.wrapping} onPress={onPress} />;\r\n};\r\n\r\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\r\n    const t = useTranslation();\r\n    const onPress = useCallback(async () => {\r\n        onError({});\r\n        state.onUnwrap().catch(onError);\r\n    }, []);\r\n    return <Button title={t(\"unwrap\")} loading={state.unwrapping} onPress={onPress} />;\r\n};\r\n\r\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\r\n    const t = useTranslation();\r\n    const d = !state.trade?.executionPrice;\r\n    return (\r\n        <View>\r\n            <Text\r\n                disabled={isEmptyValue(state.limitOrderReturn)}\r\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\r\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\r\n            </Text>\r\n            <Meta\r\n                label={t(\"market-price\")}\r\n                text={state.trade?.executionPrice?.toFixed(8) || undefined}\r\n                suffix={state.fromSymbol + \" / \" + state.toSymbol}\r\n                disabled={d}\r\n            />\r\n            <Meta label={t(\"relayer-fee-amount\")} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\r\n            <Meta label={t(\"swap-fee-amount\")} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\r\n            <Meta label={t(\"expiration\")} text={t(\"24-hours-from-now\")} disabled={d} />\r\n            <LimitOrderControls state={state} />\r\n        </View>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\r\n    const { address, chainId } = useContext(EthersContext);\r\n    const [error, setError] = useState<MetamaskError>({});\r\n    const [allowed, setAllowed] = useState<boolean>();\r\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\r\n    useDelayedEffect(\r\n        async () => {\r\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\r\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\r\n                const erc20 = getContract(\"ERC20\", state.fromToken.address, ALCHEMY_PROVIDER);\r\n                const allowance = await erc20.allowance(address, SETTLEMENT);\r\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\r\n            }\r\n        },\r\n        500,\r\n        [state.fromToken, state.fromAmount]\r\n    );\r\n    const disabled =\r\n        state.orderType === \"market\" ||\r\n        state.toSymbol === \"\" ||\r\n        !state.fromToken ||\r\n        !state.toToken ||\r\n        isEmptyValue(state.fromAmount) ||\r\n        !state.trade ||\r\n        isEmptyValue(state.limitOrderPrice);\r\n    return (\r\n        <View style={{ marginTop: Spacing.normal }}>\r\n            {disabled ? (\r\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\r\n            ) : parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.fromToken!.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\r\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\r\n                  Fraction.parse(state.trade!.executionPrice.toFixed(state.toToken!.decimals))\r\n              ) ? (\r\n                <PriceTooLowButton />\r\n            ) : state.unsupported ? (\r\n                <UnsupportedButton state={state} />\r\n            ) : state.loading || !state.trade ? (\r\n                <FetchingButton />\r\n            ) : (\r\n                <>\r\n                    {chainId === 1 ? (\r\n                        <ApproveButton\r\n                            token={state.fromToken!}\r\n                            spender={SETTLEMENT}\r\n                            onSuccess={() => setAllowed(true)}\r\n                            onError={setError}\r\n                            hidden={allowed}\r\n                        />\r\n                    ) : !allowed ? (\r\n                        <ChangeNetwork />\r\n                    ) : (\r\n                        <View />\r\n                    )}\r\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\r\n                </>\r\n            )}\r\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst PriceTooLowButton = () => {\r\n    const t = useTranslation();\r\n    return <Button title={t(\"set-price-greater-than-market\")} disabled={true} />;\r\n};\r\n\r\nconst PlaceOrderButton = ({\r\n    state,\r\n    onError,\r\n    disabled\r\n}: {\r\n    state: SwapState;\r\n    onError: (e) => void;\r\n    disabled: boolean;\r\n}) => {\r\n    const { chainId } = useContext(EthersContext);\r\n    const t = useTranslation();\r\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\r\n    const onPress = useCallback(async () => {\r\n        onError({});\r\n        try {\r\n            await state.onCreateOrder();\r\n            goToLimitOrders();\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\r\n    if (!disabled && chainId !== 42) return <ChangeNetwork chainId={42} />;\r\n    return (\r\n        <Button title={t(\"place-limit-order\")} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />\r\n    );\r\n};\r\n\r\nexport default SwapScreen;\r\n"],"sourceRoot":""}