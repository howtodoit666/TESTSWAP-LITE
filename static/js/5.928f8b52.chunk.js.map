{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/Notice.tsx","src/components/TokenSymbol.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/components/Select.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","node_modules/eth-permit/dist/eth-permit.js","node_modules/eth-permit/dist/lib.js","node_modules/utf8/utf8.js","src/components/UnsupportedButton.tsx","src/hooks/useZapper.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useAddLiquidityState.tsx","src/screens/LiquidityScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","TokenSymbol","medium","caption","marginLeft","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenAmount","formatBalance","balance","decimals","TokenName","numberOfLines","ellipsizeMode","small","width","name","Item","ITEM_SEPARATOR_HEIGHT","paddingLeft","paddingRight","selected","selectable","setOption","undefined","option","alignItems","flex","description","Select","expanded","onExpand","options","map","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","signERC2612Permit","signDaiPermit","rpc_1","lib_1","MAX_INT","EIP712Domain","zeros","numZeros","padEnd","getTokenName","provider","hexToUtf8","call","substr","getDomain","tokenAddress","chainId","all","getChainId","version","verifyingContract","holder","expiry","nonce","message","allowed","typedData","domain","types","Permit","primaryType","createTypedDaiData","sig","signData","assign","owner","deadline","createTypedERC2612Data","__importDefault","mod","__esModule","utf8_1","hex","str","code","l","replace","split","reverse","join","length","i","parseInt","String","fromCharCode","default","decode","root","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","charCodeAt","push","checkScalarValue","codePoint","Error","toUpperCase","createByte","shift","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","encode","codePoints","index","byteString","tmp","array","ucs2encode","UnsupportedButton","state","fromSymbol","toSymbol","useZapper","ethereum","useSDK","getPair","getTrade","calculateAmountOfLPTokenMinted","useSwapRouter","allowedSlippage","ttl","zapSlippage","Percent","populateSwapData","fromToken","toToken","signer","trade","params","Router","swapCallParameters","feeOnTransfer","recipient","ZAP_IN","router","getContract","ROUTER","populateTransaction","methodName","args","data","zapIn","fromAmount","pair","convertToken","div","getOutputAmount","lpTokenAmount","contract","liquidityToken","deduct","isETH","ethers","constants","Zero","estimateGas","ZapIn","gasLimit","mul","logTransaction","arg","getZapOutSwappedAmount","outputToken","lpToken","tokenA","tokenB","fromReserve","parseCurrencyAmount","reserveOf","totalSupply","outputAmount","zapOut","ZAP_OUT","Math","floor","Date","getTime","getAddress","permit","v","r","s","ZapOutWithPermit","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","FlexView","TokenLogo","View","Button","duplicate","height","TokenSearch","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","trim","utils","isAddress","findOrFetchToken","Input","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","useMemo","filter","sort","compareTokens","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","onChangeSymbol","includes","useAddLiquidityState","useTokenPairState","updateTokens","mode","setMode","setPair","adding","setAdding","addLiquidity","addLiquidityETH","priceDetermined","priceOf","denominator","startsWith","setFromSymbol","useDelayedOnBlockEffect","block","onAdd","toAmount","parseBalance","amountETH","AddLiquidity","ChangeNetwork","large","Border","ItemSeparator","FromTokenSelect","customTokens","ToTokenSelect","setToSymbol","Heading","FromTokenInput","TokenInput","onAmountChanged","newAmount","setFromAmount","quote","convertAmount","toExact","setToAmount","isEmptyValue","hideMaxButton","ToTokenInput","PriceInfo","FirstProviderInfo","green","red","noAmount","initialPrice","Fraction","from","InfoBox","price","isETHWETHPair","FirstProviderControls","error","setError","fromApproveRequired","fromTokenAllowed","toApproveRequired","toTokenAllowed","FetchingButton","gt","setFromTokenAllowed","setToTokenAllowed","ErrorMessage","PairPriceInfo","useAmountCalculator","toFixed","Meta","label","setAmount","to","minted","PriceMeta","Controls","useZapTokenAllowance","setAllowed","zapToken","getTokenAllowance","minAllowance","BigNumber","pow","sub","fromAllowance","gte","SupplyButton","goToRemoveLiquidity","useLinker","LiquidityScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/5.928f8b52.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface AmountMetaProps {\r\n    amount?: string;\r\n    suffix?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst AmountMeta: FC<AmountMetaProps> = props => {\r\n    const t = useTranslation();\r\n    const { textDark, textLight, placeholder } = useColors();\r\n    return (\r\n        <Text\r\n            style={{\r\n                fontSize: IS_DESKTOP ? 28 : 20,\r\n                marginBottom: Spacing.normal,\r\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\r\n            }}>\r\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default AmountMeta;\r\n","import React from \"react\";\r\n\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Button from \"./Button\";\r\n\r\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\r\n    const t = useTranslation();\r\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\r\n};\r\nexport default InsufficientBalanceButton;\r\n","import React, { FC, useCallback, useContext, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport Button from \"./Button\";\r\n\r\nexport interface ApproveButtonProps {\r\n    token: Token;\r\n    spender: string;\r\n    onSuccess: () => void;\r\n    onError: (e) => void;\r\n    hidden?: boolean;\r\n}\r\n\r\nconst ApproveButton: FC<ApproveButtonProps> = props => {\r\n    const t = useTranslation();\r\n    const { approveToken } = useContext(EthersContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const onPress = useCallback(async () => {\r\n        if (props.token) {\r\n            props.onError({});\r\n            setLoading(true);\r\n            try {\r\n                const tx = await approveToken(props.token.address, props.spender);\r\n                if (tx) {\r\n                    await tx.wait();\r\n                    props.onSuccess();\r\n                }\r\n            } catch (e) {\r\n                props.onError(e);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [props.token]);\r\n    if (props.hidden) return <View />;\r\n    return (\r\n        <Button\r\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\r\n            onPress={onPress}\r\n            loading={loading}\r\n            containerStyle={{ marginBottom: Spacing.tiny }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ApproveButton;\r\n","import React from \"react\";\r\nimport { View, ViewStyle } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useStyles from \"../hooks/useStyles\";\r\nimport Button from \"./Button\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface NoticeProps {\r\n    text: string;\r\n    clear?: boolean;\r\n    color?: string;\r\n    buttonText?: string;\r\n    onPressButton?: () => void;\r\n    style?: ViewStyle;\r\n}\r\n\r\nconst Notice = (props: NoticeProps) => {\r\n    const { textLight } = useColors();\r\n    const { border } = useStyles();\r\n    const borderStyle = border({ color: props.color });\r\n    const color = props.color || textLight;\r\n    return (\r\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\r\n            <Text note={true} style={{ color }}>\r\n                {props.text}\r\n            </Text>\r\n            {props.buttonText && props.onPressButton && (\r\n                <Button\r\n                    title={props.buttonText}\r\n                    type={\"clear\"}\r\n                    size={\"small\"}\r\n                    fontWeight={\"bold\"}\r\n                    onPress={props.onPressButton}\r\n                    titleStyle={{ color }}\r\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\r\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\r\n                />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Notice;\r\n","import React from \"react\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\r\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\r\n        {props.token.symbol}\r\n    </Text>\r\n);\r\n\r\nexport default TokenSymbol;\r\n","import useAsyncEffect from \"use-async-effect\";\r\n\r\nconst handles = {};\r\n\r\nconst useDelayedEffect = (\r\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\r\n    timeout: number,\r\n    inputs?: any[]\r\n) => {\r\n    const key = effect.toString();\r\n    useAsyncEffect<number>(\r\n        () => {\r\n            const handle = setTimeout(effect, timeout);\r\n            handles[key] = handle;\r\n            return handle;\r\n        },\r\n        handle => {\r\n            clearTimeout(handle);\r\n        },\r\n        inputs\r\n    );\r\n};\r\nexport default useDelayedEffect;\r\n","import React from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { IS_DESKTOP } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport { formatBalance } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\r\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\r\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\r\n    </Text>\r\n);\r\n\r\nexport default TokenAmount;\r\n","import React from \"react\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport Token from \"../types/Token\";\r\nimport Text from \"./Text\";\r\n\r\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\r\n    <Text\r\n        caption={true}\r\n        numberOfLines={1}\r\n        ellipsizeMode={\"tail\"}\r\n        style={{ marginLeft: Spacing.small, width: 180 }}\r\n        disabled={props.disabled}>\r\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\r\n    </Text>\r\n);\r\n\r\nexport default TokenName;\r\n","import React, { FC } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport CloseIcon from \"./CloseIcon\";\r\nimport Expandable from \"./Expandable\";\r\nimport FlexView from \"./FlexView\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Selectable from \"./Selectable\";\r\nimport SelectIcon from \"./SelectIcon\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface Option {\r\n    key: string;\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SelectProps {\r\n    title: string;\r\n    options: Option[];\r\n    option?: Option;\r\n    setOption: (option?: Option) => void;\r\n}\r\n\r\nconst Select: FC<SelectProps> = props => {\r\n    return (\r\n        <View>\r\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\r\n                {props.options.map(option => (\r\n                    <Item\r\n                        key={option.key}\r\n                        option={option}\r\n                        setOption={props.setOption}\r\n                        selected={option.key === props.option?.key}\r\n                    />\r\n                ))}\r\n            </Expandable>\r\n            {props.option && (\r\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst Item = (props: {\r\n    option: Option;\r\n    setOption?: (option?: Option) => void;\r\n    selected: boolean;\r\n    selectable?: boolean;\r\n}) => {\r\n    return (\r\n        <Selectable\r\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\r\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\r\n            selected={props.selected}\r\n            disabled={props.selectable}\r\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\r\n                    <Text note={true} style={{ marginTop: 4 }}>\r\n                        {props.option.description}\r\n                    </Text>\r\n                </View>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport { formatUSD } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface TokenPriceProps {\r\n    token: TokenWithValue;\r\n    disabled?: boolean;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst TokenPrice: FC<TokenPriceProps> = props => {\r\n    return (\r\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\r\n            {formatUSD(props.token.priceUSD || 0, 4)}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default TokenPrice;\r\n","import React, { FC } from \"react\";\r\nimport { TextStyle } from \"react-native\";\r\n\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport { formatUSD } from \"../utils\";\r\nimport Text from \"./Text\";\r\n\r\nexport interface TokenValueProps {\r\n    token: TokenWithValue;\r\n    disabled?: boolean;\r\n    style?: TextStyle;\r\n}\r\n\r\nconst TokenValue: FC<TokenValueProps> = props => {\r\n    return (\r\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\r\n            {formatUSD(props.token.valueUSD || 0, 4)}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default TokenValue;\r\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signERC2612Permit = exports.signDaiPermit = void 0;\nconst rpc_1 = require(\"./rpc\");\nconst lib_1 = require(\"./lib\");\nconst MAX_INT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\nconst createTypedDaiData = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"holder\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"expiry\", type: \"uint256\" },\n                { name: \"allowed\", type: \"bool\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst createTypedERC2612Data = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"owner\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"value\", type: \"uint256\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"deadline\", type: \"uint256\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst NONCES_FN = '0x7ecebe00';\nconst NAME_FN = '0x06fdde03';\nconst zeros = (numZeros) => ''.padEnd(numZeros, '0');\nconst getTokenName = (provider, address) => __awaiter(void 0, void 0, void 0, function* () { return lib_1.hexToUtf8((yield rpc_1.call(provider, address, NAME_FN)).substr(130)); });\nconst getDomain = (provider, token) => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof token !== 'string') {\n        return token;\n    }\n    const tokenAddress = token;\n    const [name, chainId] = yield Promise.all([\n        getTokenName(provider, tokenAddress),\n        rpc_1.getChainId(provider),\n    ]);\n    const domain = { name, version: '1', chainId, verifyingContract: tokenAddress };\n    return domain;\n});\nexports.signDaiPermit = (provider, token, holder, spender, expiry, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        holder,\n        spender,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${holder.substr(2)}`)),\n        expiry: expiry || MAX_INT,\n        allowed: true,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedDaiData(message, domain);\n    const sig = yield rpc_1.signData(provider, holder, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\nexports.signERC2612Permit = (provider, token, owner, spender, value = MAX_INT, deadline, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        owner,\n        spender,\n        value,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${owner.substr(2)}`)),\n        deadline: deadline || MAX_INT,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedERC2612Data(message, domain);\n    const sig = yield rpc_1.signData(provider, owner, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToUtf8 = void 0;\nconst utf8_1 = __importDefault(require(\"utf8\"));\nexports.hexToUtf8 = function (hex) {\n    // if (!isHexStrict(hex))\n    //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n    let str = \"\";\n    let code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    let l = hex.length;\n    for (let i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8_1.default.decode(str);\n};\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","import React from \"react\";\r\n\r\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Button from \"./Button\";\r\n\r\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\r\n    const t = useTranslation();\r\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\r\n};\r\n\r\nexport default UnsupportedButton;\r\n","import { useCallback, useContext } from \"react\";\r\n\r\nimport { Percent, Router, TokenAmount } from \"@sushiswap/sdk\";\r\nimport { signERC2612Permit } from \"eth-permit\";\r\nimport { ethers } from \"ethers\";\r\nimport { ROUTER, ZAP_IN, ZAP_OUT } from \"../constants/contracts\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport LPToken from \"../types/LPToken\";\r\nimport Token from \"../types/Token\";\r\nimport { convertToken, deduct, getContract, isETH, parseCurrencyAmount } from \"../utils\";\r\nimport { logTransaction } from \"../utils/analytics-utils\";\r\nimport useSDK from \"./useSDK\";\r\nimport useSwapRouter from \"./useSwapRouter\";\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useZapper = () => {\r\n    const { ethereum } = useContext(EthersContext);\r\n    const { getPair, getTrade, calculateAmountOfLPTokenMinted } = useSDK();\r\n    const { allowedSlippage, ttl } = useSwapRouter();\r\n    const zapSlippage = new Percent(\"3\", \"100\"); // 3.0%\r\n\r\n    const populateSwapData = async (\r\n        fromToken: Token,\r\n        toToken: Token,\r\n        amount: ethers.BigNumber,\r\n        provider: ethers.providers.BaseProvider,\r\n        signer: ethers.Signer\r\n    ) => {\r\n        const trade = await getTrade(fromToken, toToken, amount, provider);\r\n        if (!trade) throw new Error(\"Cannot find trade\");\r\n        const params = Router.swapCallParameters(trade, {\r\n            feeOnTransfer: false,\r\n            allowedSlippage,\r\n            recipient: ZAP_IN,\r\n            ttl\r\n        });\r\n        const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\r\n        const tx = await router.populateTransaction[params.methodName](...params.args, { value: params.value });\r\n        return tx.data || \"\";\r\n    };\r\n\r\n    const zapIn = useCallback(\r\n        async (\r\n            fromToken: Token,\r\n            toToken: Token,\r\n            fromAmount: ethers.BigNumber,\r\n            provider: ethers.providers.BaseProvider,\r\n            signer: ethers.Signer\r\n        ) => {\r\n            const pair = await getPair(fromToken, toToken, provider);\r\n            const amount = new TokenAmount(convertToken(fromToken), fromAmount.div(2).toString());\r\n            const lpTokenAmount = await calculateAmountOfLPTokenMinted(pair, amount, pair.getOutputAmount(amount)[0]);\r\n            if (!lpTokenAmount) throw new Error(\"Cannot calculate LP token amount\");\r\n            const contract = getContract(\"ZapIn\", ZAP_IN, signer);\r\n            const args = [\r\n                fromToken.address,\r\n                pair.liquidityToken.address,\r\n                fromAmount,\r\n                deduct(lpTokenAmount, zapSlippage),\r\n                ROUTER,\r\n                ROUTER,\r\n                await populateSwapData(fromToken, toToken, fromAmount.div(2), provider, signer)\r\n            ];\r\n            const value = isETH(fromToken) ? fromAmount : ethers.constants.Zero;\r\n            const gasLimit = await contract.estimateGas.ZapIn(...args, { value });\r\n            const tx = await contract.ZapIn(...args, {\r\n                value,\r\n                gasLimit: gasLimit.mul(120).div(100)\r\n            });\r\n            return logTransaction(tx, \"ZapIn_General_V2.ZapIn()\", ...args.map(arg => arg.toString()));\r\n        },\r\n        [populateSwapData]\r\n    );\r\n\r\n    const getZapOutSwappedAmount = async (\r\n        outputToken: Token,\r\n        lpToken: LPToken,\r\n        lpTokenAmount: ethers.BigNumber,\r\n        provider: ethers.providers.BaseProvider\r\n    ) => {\r\n        let fromToken: Token;\r\n        let toToken: Token;\r\n        if (outputToken === lpToken.tokenA) {\r\n            fromToken = lpToken.tokenB;\r\n            toToken = lpToken.tokenA;\r\n        } else if (outputToken === lpToken.tokenB) {\r\n            fromToken = lpToken.tokenA;\r\n            toToken = lpToken.tokenB;\r\n        } else {\r\n            throw new Error(\"Wrong outputToken\");\r\n        }\r\n        const pair = await getPair(fromToken, toToken, provider);\r\n        const fromReserve = parseCurrencyAmount(pair.reserveOf(convertToken(fromToken)), fromToken.decimals);\r\n        const fromAmount = lpTokenAmount.mul(fromReserve).div(lpToken.totalSupply);\r\n        const trade = await getTrade(fromToken, toToken, fromAmount, provider);\r\n        if (!trade) throw new Error(\"Cannot find trade\");\r\n        return parseCurrencyAmount(trade.outputAmount);\r\n    };\r\n\r\n    const zapOut = useCallback(\r\n        // tslint:disable-next-line:max-func-body-length\r\n        async (\r\n            lpToken: LPToken,\r\n            outputToken: Token,\r\n            amount: ethers.BigNumber,\r\n            provider: ethers.providers.BaseProvider,\r\n            signer: ethers.Signer\r\n        ) => {\r\n            const contract = getContract(\"ZapOut\", ZAP_OUT, signer);\r\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\r\n            const permit = await signERC2612Permit(\r\n                ethereum,\r\n                lpToken.address,\r\n                await signer.getAddress(),\r\n                ZAP_OUT,\r\n                amount.toString(),\r\n                deadline\r\n            );\r\n            const args = [\r\n                outputToken.address,\r\n                lpToken.address,\r\n                amount,\r\n                deduct(await getZapOutSwappedAmount(outputToken, lpToken, amount, provider), zapSlippage),\r\n                amount,\r\n                deadline,\r\n                permit.v,\r\n                permit.r,\r\n                permit.s\r\n            ];\r\n            const gasLimit = await contract.estimateGas.ZapOutWithPermit(...args);\r\n            const tx = await contract.ZapOutWithPermit(...args, {\r\n                gasLimit: gasLimit.mul(120).div(100)\r\n            });\r\n            return logTransaction(tx, \"ZapOut_General_V1.ZapOutWithPermit()\", ...args.map(arg => arg.toString()));\r\n        },\r\n        [getZapOutSwappedAmount]\r\n    );\r\n\r\n    return {\r\n        zapIn,\r\n        zapOut,\r\n        getZapOutSwappedAmount\r\n    };\r\n};\r\n\r\nexport default useZapper;\r\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { ActivityIndicator, View } from \"react-native\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\r\nimport useStyles from \"../hooks/useStyles\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\r\nimport Button from \"./Button\";\r\nimport FlexView from \"./FlexView\";\r\nimport Input from \"./Input\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Selectable from \"./Selectable\";\r\nimport TokenLogo from \"./TokenLogo\";\r\nimport TokenName from \"./TokenName\";\r\n\r\nexport interface TokenSearchProps {\r\n    tokens?: Token[];\r\n    text: string;\r\n    onChangeText: (text: string) => void;\r\n    onAddToken?: (token: Token) => void;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst TokenSearch: FC<TokenSearchProps> = props => {\r\n    const t = useTranslation();\r\n    const { border } = useStyles();\r\n    const { provider, tokens } = useContext(EthersContext);\r\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\r\n    const [loading, setLoading] = useState(false);\r\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\r\n    if (!props.tokens) return <View />;\r\n    useEffect(() => {\r\n        if (props.text === \"\") {\r\n            setLoading(false);\r\n            setTokenToAdd(undefined);\r\n        }\r\n    }, [props.text]);\r\n    useDelayedEffect(\r\n        async () => {\r\n            const address = props.text.trim();\r\n            if (provider && ethers.utils.isAddress(address)) {\r\n                setLoading(true);\r\n                try {\r\n                    const token = await findOrFetchToken(address, provider);\r\n                    if (token.name && token.symbol && token.decimals) {\r\n                        setTokenToAdd(token as Token);\r\n                    }\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n        300,\r\n        [provider, props.text]\r\n    );\r\n    return (\r\n        <View>\r\n            <FlexView style={{ marginBottom: Spacing.small }}>\r\n                <Input\r\n                    value={props.text}\r\n                    onChangeText={props.onChangeText}\r\n                    placeholder={t(\"token-name-symbol-or-address\")}\r\n                    autoFocus={IS_DESKTOP}\r\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\r\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\r\n                    labelStyle={{ height: 0 }}\r\n                    containerStyle={{\r\n                        ...border(),\r\n                        paddingHorizontal: Spacing.tiny,\r\n                        paddingTop: 12,\r\n                        paddingBottom: 0\r\n                    }}\r\n                />\r\n                {props.onAddToken && loading && <Loading />}\r\n            </FlexView>\r\n            {props.onAddToken && tokenToAdd && (\r\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\r\n\r\nconst TokenItem = (props: {\r\n    token: Token;\r\n    selected: boolean;\r\n    onSelectToken: (token: Token) => void;\r\n    duplicate: boolean;\r\n}) => {\r\n    const t = useTranslation();\r\n    const { accent } = useColors();\r\n    const onPress = useCallback(() => {\r\n        props.onSelectToken(props.token);\r\n    }, [props.onSelectToken, props.token]);\r\n    return (\r\n        <Selectable\r\n            selected={false}\r\n            disabled={true}\r\n            onPress={onPress}\r\n            containerStyle={{\r\n                marginBottom: ITEM_SEPARATOR_HEIGHT\r\n            }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token} />\r\n                <TokenName token={props.token} />\r\n                <View style={{ flex: 1 }} />\r\n                <Button\r\n                    type={\"clear\"}\r\n                    size={\"small\"}\r\n                    color={accent}\r\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\r\n                    fontWeight={\"bold\"}\r\n                    onPress={onPress}\r\n                    disabled={props.duplicate}\r\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\r\n                />\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nexport default TokenSearch;\r\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { FlatList, View, ViewStyle } from \"react-native\";\r\n\r\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport Token from \"../types/Token\";\r\nimport TokenWithValue from \"../types/TokenWithValue\";\r\nimport CloseIcon from \"./CloseIcon\";\r\nimport Expandable from \"./Expandable\";\r\nimport FlexView from \"./FlexView\";\r\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\r\nimport Loading from \"./Loading\";\r\nimport Selectable from \"./Selectable\";\r\nimport SelectIcon from \"./SelectIcon\";\r\nimport Text from \"./Text\";\r\nimport TokenAmount from \"./TokenAmount\";\r\nimport TokenLogo from \"./TokenLogo\";\r\nimport TokenName from \"./TokenName\";\r\nimport TokenPrice from \"./TokenPrice\";\r\nimport TokenSearch from \"./TokenSearch\";\r\nimport TokenSymbol from \"./TokenSymbol\";\r\nimport TokenValue from \"./TokenValue\";\r\n\r\nexport interface TokenSelectProps {\r\n    title: string;\r\n    symbol: string;\r\n    onChangeSymbol: (symbol: string) => void;\r\n    disabled?: (token: Token) => boolean;\r\n    hidden?: (token: Token) => boolean;\r\n    style?: ViewStyle;\r\n}\r\n\r\nconst TokenSelect: FC<TokenSelectProps> = props => {\r\n    const { tokens, addCustomToken } = useContext(EthersContext);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [query, setQuery] = useState(\"\");\r\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\r\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\r\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\r\n    const onAddToken = async (t: Token) => {\r\n        await addCustomToken(t);\r\n        setSearch(\"\");\r\n        setQuery(\"\");\r\n        props.onChangeSymbol(t.symbol);\r\n    };\r\n    const hidden = (t: Token) => {\r\n        if (query.length > 0) {\r\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\r\n        }\r\n        return props.hidden?.(t) || false;\r\n    };\r\n    useEffect(() => setSearch(\"\"), [props.symbol]);\r\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\r\n    return (\r\n        <View style={props.style}>\r\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\r\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\r\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\r\n            </Expandable>\r\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst TokenList = (props: {\r\n    onSelectToken: (token: Token) => void;\r\n    disabled?: (token: Token) => boolean;\r\n    hidden?: (token: Token) => boolean;\r\n}) => {\r\n    const { loadingTokens, tokens } = useContext(EthersContext);\r\n    const renderItem = useCallback(\r\n        ({ item }) => {\r\n            return (\r\n                <TokenItem\r\n                    key={item.address}\r\n                    token={item}\r\n                    selected={false}\r\n                    onSelectToken={props.onSelectToken}\r\n                    disabled={props.disabled?.(item)}\r\n                />\r\n            );\r\n        },\r\n        [props.onSelectToken, props.disabled]\r\n    );\r\n    const data = useMemo(\r\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\r\n        [tokens, props.hidden]\r\n    );\r\n    return loadingTokens ? (\r\n        <Loading />\r\n    ) : data.length === 0 ? (\r\n        <EmptyList />\r\n    ) : (\r\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\r\n    );\r\n};\r\n\r\nconst EmptyList = () => {\r\n    const t = useTranslation();\r\n    return (\r\n        <View style={{ margin: Spacing.normal }}>\r\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                {t(\"you-dont-have-assets\")}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst TokenItem = (props: {\r\n    token: TokenWithValue;\r\n    selected: boolean;\r\n    onSelectToken: (token: Token) => void;\r\n    disabled?: boolean;\r\n    selectable?: boolean;\r\n}) => {\r\n    const onPress = useCallback(() => {\r\n        props.onSelectToken(props.token);\r\n    }, [props.onSelectToken, props.token]);\r\n    return (\r\n        <Selectable\r\n            selected={props.selected}\r\n            onPress={onPress}\r\n            disabled={props.disabled || props.selectable}\r\n            containerStyle={{\r\n                marginBottom: ITEM_SEPARATOR_HEIGHT\r\n            }}>\r\n            <FlexView style={{ alignItems: \"center\" }}>\r\n                <TokenLogo token={props.token} disabled={props.disabled} />\r\n                <View>\r\n                    {props.token.priceUSD !== null && (\r\n                        <TokenPrice\r\n                            token={props.token}\r\n                            disabled={props.disabled}\r\n                            style={{ marginLeft: Spacing.small }}\r\n                        />\r\n                    )}\r\n                    <TokenName token={props.token} disabled={props.disabled} />\r\n                </View>\r\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\r\n                    <FlexView>\r\n                        <TokenAmount\r\n                            token={props.token}\r\n                            disabled={props.disabled}\r\n                            style={{ flex: 1, textAlign: \"right\" }}\r\n                        />\r\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\r\n                    </FlexView>\r\n                </View>\r\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\r\n            </FlexView>\r\n        </Selectable>\r\n    );\r\n};\r\n\r\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\r\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\r\n    const value2 = t2?.valueUSD || 0;\r\n    const value1 = t1?.valueUSD || 1;\r\n    if (value2 === value1) {\r\n        return (\r\n            (t2.balance.isZero() ? 0 : 10000000000) -\r\n            (t1.balance.isZero() ? 0 : 10000000000) +\r\n            t1.symbol.localeCompare(t2.symbol)\r\n        );\r\n    }\r\n    return value2 - value1;\r\n};\r\n\r\nexport default TokenSelect;\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Pair } from \"@sushiswap/sdk\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport { convertToken, isETH, parseBalance } from \"../utils\";\r\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\r\nimport useSDK from \"./useSDK\";\r\nimport useSwapRouter from \"./useSwapRouter\";\r\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\r\nimport useZapper from \"./useZapper\";\r\n\r\nexport type AddLiquidityMode = \"normal\" | \"zapper\";\r\n\r\nexport interface AddLiquidityState extends TokenPairState {\r\n    mode?: AddLiquidityMode;\r\n    setMode: (mode?: AddLiquidityMode) => void;\r\n    pair?: Pair;\r\n    priceDetermined: boolean;\r\n    onAdd: () => Promise<void>;\r\n    adding: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst useAddLiquidityState: () => AddLiquidityState = () => {\r\n    const state = useTokenPairState();\r\n    const { provider, signer, updateTokens } = useContext(EthersContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [mode, setMode] = useState<AddLiquidityMode>();\r\n    const [pair, setPair] = useState<Pair>();\r\n    const [adding, setAdding] = useState(false);\r\n    const { getPair } = useSDK();\r\n    const { addLiquidity, addLiquidityETH } = useSwapRouter();\r\n    const { zapIn } = useZapper();\r\n    const priceDetermined =\r\n        !!pair &&\r\n        !!state.toToken &&\r\n        !pair\r\n            .priceOf(convertToken(state.toToken))\r\n            .denominator.toString()\r\n            .startsWith(\"0\");\r\n\r\n    useEffect(() => {\r\n        setPair(undefined);\r\n        state.setFromSymbol(\"\");\r\n    }, [mode]);\r\n\r\n    useDelayedOnBlockEffect(\r\n        async block => {\r\n            if (!block) {\r\n                setLoading(true);\r\n                setPair(undefined);\r\n            }\r\n            if (state.fromToken && state.toToken && provider) {\r\n                try {\r\n                    setPair(await getPair(state.fromToken, state.toToken, provider));\r\n                } catch (e) {\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n        },\r\n        () => \"getPair(\" + state.fromSymbol + \",\" + state.toSymbol + \")\",\r\n        [state.fromSymbol, state.toSymbol, provider],\r\n        0\r\n    );\r\n\r\n    const onAdd = useCallback(async () => {\r\n        if (state.fromToken && state.toToken && state.fromAmount && state.toAmount && provider && signer) {\r\n            setAdding(true);\r\n            try {\r\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\r\n                const toAmount = parseBalance(state.toAmount, state.toToken.decimals);\r\n                if (mode === \"zapper\") {\r\n                    const tx = await zapIn(state.fromToken, state.toToken, fromAmount, provider, signer);\r\n                    await tx.wait();\r\n                } else if (isETH(state.fromToken) || isETH(state.toToken)) {\r\n                    const [token, amount, amountETH] = isETH(state.fromToken)\r\n                        ? [state.toToken, toAmount, fromAmount]\r\n                        : [state.fromToken, fromAmount, toAmount];\r\n                    const tx = await addLiquidityETH(token, amount, amountETH, signer);\r\n                    await tx.wait();\r\n                } else {\r\n                    const tx = await addLiquidity(state.fromToken, state.toToken, fromAmount, toAmount, signer);\r\n                    await tx.wait();\r\n                }\r\n                await updateTokens();\r\n                state.setFromSymbol(\"\");\r\n            } finally {\r\n                setAdding(false);\r\n            }\r\n        }\r\n    }, [state.fromToken, state.toToken, state.fromAmount, state.toAmount, provider, signer]);\r\n\r\n    return {\r\n        ...state,\r\n        loading: loading || state.loading,\r\n        mode,\r\n        setMode,\r\n        pair,\r\n        priceDetermined,\r\n        onAdd,\r\n        adding\r\n    };\r\n};\r\n\r\nexport default useAddLiquidityState;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Platform, View } from \"react-native\";\r\n\r\nimport { TokenAmount } from \"@sushiswap/sdk\";\r\nimport { ethers } from \"ethers\";\r\nimport useAsyncEffect from \"use-async-effect\";\r\nimport AmountMeta from \"../components/AmountMeta\";\r\nimport ApproveButton from \"../components/ApproveButton\";\r\nimport BackgroundImage from \"../components/BackgroundImage\";\r\nimport Border from \"../components/Border\";\r\nimport Button from \"../components/Button\";\r\nimport ChangeNetwork from \"../components/ChangeNetwork\";\r\nimport Container from \"../components/Container\";\r\nimport Content from \"../components/Content\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport FetchingButton from \"../components/FetchingButton\";\r\nimport Heading from \"../components/Heading\";\r\nimport InfoBox from \"../components/InfoBox\";\r\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\r\nimport ItemSeparator from \"../components/ItemSeparator\";\r\nimport Meta from \"../components/Meta\";\r\nimport Notice from \"../components/Notice\";\r\nimport Select, { Option } from \"../components/Select\";\r\nimport Text from \"../components/Text\";\r\nimport Title from \"../components/Title\";\r\nimport TokenInput from \"../components/TokenInput\";\r\nimport TokenSelect from \"../components/TokenSelect\";\r\nimport UnsupportedButton from \"../components/UnsupportedButton\";\r\nimport WebFooter from \"../components/web/WebFooter\";\r\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\r\nimport { ROUTER, ZAP_IN } from \"../constants/contracts\";\r\nimport { Spacing } from \"../constants/dimension\";\r\nimport Fraction from \"../constants/Fraction\";\r\nimport { EthersContext } from \"../context/EthersContext\";\r\nimport useAddLiquidityState, { AddLiquidityMode, AddLiquidityState } from \"../hooks/useAddLiquidityState\";\r\nimport useColors from \"../hooks/useColors\";\r\nimport useLinker from \"../hooks/useLinker\";\r\nimport useSDK from \"../hooks/useSDK\";\r\nimport useTranslation from \"../hooks/useTranslation\";\r\nimport MetamaskError from \"../types/MetamaskError\";\r\nimport Token from \"../types/Token\";\r\nimport { convertAmount, convertToken, formatBalance, isEmptyValue, isETH, isETHWETHPair, parseBalance } from \"../utils\";\r\nimport Screen from \"./Screen\";\r\n\r\nconst LiquidityScreen = () => {\r\n    const t = useTranslation();\r\n    return (\r\n        <Screen>\r\n            <Container>\r\n                <BackgroundImage />\r\n                <Content>\r\n                    <Title text={t(\"add-liquidity\")} />\r\n                    <Text light={true}>{t(\"add-liquidity-desc\")}</Text>\r\n                    <AddLiquidity />\r\n                </Content>\r\n                {Platform.OS === \"web\" && <WebFooter />}\r\n            </Container>\r\n            <LiquiditySubMenu />\r\n        </Screen>\r\n    );\r\n};\r\n\r\nconst AddLiquidity = () => {\r\n    const { chainId } = useContext(EthersContext);\r\n    const state = useAddLiquidityState();\r\n    if (chainId !== 1) return <ChangeNetwork />;\r\n    return (\r\n        <View style={{ marginTop: Spacing.large }}>\r\n            {/*<ModeSelect state={state} />*/}\r\n            {/*<Border />*/}\r\n            <FromTokenSelect state={state} />\r\n            <Border />\r\n            <ToTokenSelect state={state} />\r\n            <Border />\r\n            <FromTokenInput state={state} />\r\n            {/*{state.mode === \"zapper\" ? (\r\n                <ZapNotice state={state} />\r\n            ) : (*/}\r\n            <>\r\n                <ItemSeparator />\r\n                <ToTokenInput state={state} />\r\n            </>\r\n            {/*)}*/}\r\n            <PriceInfo state={state} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst ModeSelect = ({ state }: { state: AddLiquidityState }) => {\r\n    const t = useTranslation();\r\n    const options: Option[] = [\r\n        {\r\n            key: \"zapper\",\r\n            title: t(\"1-click-zap\"),\r\n            description: t(\"1-click-zap-desc\")\r\n        },\r\n        { key: \"normal\", title: t(\"normal\"), description: t(\"normal-desc\") }\r\n    ];\r\n    return (\r\n        <Select\r\n            title={t(\"mode\")}\r\n            options={options}\r\n            option={options.find(option => option.key === state.mode)}\r\n            setOption={option => state.setMode(option?.key as AddLiquidityMode | undefined)}\r\n        />\r\n    );\r\n};\r\n\r\nconst FromTokenSelect = ({ state }: { state: AddLiquidityState }) => {\r\n    const t = useTranslation();\r\n    const { customTokens } = useContext(EthersContext);\r\n    return (\r\n        <TokenSelect\r\n            title={t(\"1st-token\")}\r\n            symbol={state.fromSymbol}\r\n            onChangeSymbol={state.setFromSymbol}\r\n            hidden={token => !customTokens.find(tk => tk.address === token.address) && token.balance.isZero()}\r\n        />\r\n    );\r\n};\r\n\r\nconst ToTokenSelect = ({ state }: { state: AddLiquidityState }) => {\r\n    const t = useTranslation();\r\n    const { customTokens } = useContext(EthersContext);\r\n    if (!state.fromSymbol) {\r\n        return <Heading text={t(\"2nd-token\")} disabled={true} />;\r\n    }\r\n    return (\r\n        <View>\r\n            <TokenSelect\r\n                title={t(\"2nd-token\")}\r\n                symbol={state.toSymbol}\r\n                onChangeSymbol={state.setToSymbol}\r\n                hidden={token =>\r\n                    token.symbol === state.fromSymbol ||\r\n                    (!customTokens.find(tk => tk.address === token.address) && token.balance.isZero())\r\n                }\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst FromTokenInput = ({ state }: { state: AddLiquidityState }) => {\r\n    const t = useTranslation();\r\n    if (!state.fromSymbol || !state.toSymbol) {\r\n        return <Heading text={t(\"amount-of-tokens\")} disabled={true} />;\r\n    }\r\n    const onAmountChanged = (newAmount: string) => {\r\n        state.setFromAmount(newAmount);\r\n        if (state.pair && state.fromToken && state.priceDetermined) {\r\n            const fromPrice = state.pair.priceOf(convertToken(state.fromToken));\r\n            const toAmount = fromPrice.quote(convertAmount(state.fromToken, newAmount)).toExact();\r\n            state.setToAmount(isEmptyValue(toAmount) ? \"\" : toAmount);\r\n        }\r\n    };\r\n    return (\r\n        <TokenInput\r\n            title={/*state.mode === \"zapper\" ? t(\"amount-of-\", { symbol: state.fromSymbol }) :*/ t(\"amount-of-tokens\")}\r\n            token={state.fromToken}\r\n            amount={state.fromAmount}\r\n            onAmountChanged={onAmountChanged}\r\n            hideMaxButton={state.loading && !state.pair}\r\n        />\r\n    );\r\n};\r\n\r\nconst ToTokenInput = ({ state }: { state: AddLiquidityState }) => {\r\n    if (!state.fromSymbol || !state.toSymbol) return <View />;\r\n    const onAmountChanged = (newAmount: string) => {\r\n        state.setToAmount(newAmount);\r\n        if (state.pair && state.toToken && state.priceDetermined) {\r\n            const toPrice = state.pair.priceOf(convertToken(state.toToken));\r\n            const fromAmount = toPrice.quote(convertAmount(state.toToken, newAmount)).toExact();\r\n            state.setFromAmount(isEmptyValue(fromAmount) ? \"\" : fromAmount);\r\n        }\r\n    };\r\n    return (\r\n        <TokenInput\r\n            token={state.toToken}\r\n            amount={state.toAmount}\r\n            onAmountChanged={onAmountChanged}\r\n            hideMaxButton={state.loading && !state.pair}\r\n        />\r\n    );\r\n};\r\n\r\nconst ZapNotice = ({ state }: { state: AddLiquidityState }) => {\r\n    const t = useTranslation();\r\n    if (!state.fromSymbol || !state.toSymbol || !state.pair) return <View />;\r\n    return (\r\n        <Notice\r\n            clear={true}\r\n            text={t(\"zap-notice\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\r\n            style={{ marginTop: Spacing.small }}\r\n        />\r\n    );\r\n};\r\n\r\nconst PriceInfo = ({ state }: { state: AddLiquidityState }) => {\r\n    if (state.fromToken && state.toToken && !state.loading && (!state.pair || !state.priceDetermined)) {\r\n        return <FirstProviderInfo state={state} />;\r\n    } else {\r\n        return <PairPriceInfo state={state} />;\r\n    }\r\n};\r\n\r\nconst FirstProviderInfo = ({ state }: { state: AddLiquidityState }) => {\r\n    const t = useTranslation();\r\n    const { red, green } = useColors();\r\n    const noAmount = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\r\n    const initialPrice = Fraction.from(\r\n        parseBalance(state.toAmount, state.toToken!.decimals),\r\n        parseBalance(state.fromAmount, state.fromToken!.decimals)\r\n    ).toString(8);\r\n    /*const zap = state.mode === \"zapper\";*/\r\n    return (\r\n        <View>\r\n            {/*{!zap && (*/}\r\n            <InfoBox style={{ marginTop: Spacing.normal }}>\r\n                <PriceMeta state={state} price={initialPrice} disabled={noAmount} />\r\n                <FirstProviderControls state={state} />\r\n            </InfoBox>\r\n            {/*)}*/}\r\n            {!isETHWETHPair(state.fromToken, state.toToken) && (\r\n                <Notice\r\n                    text={\r\n                        t(\"first-provider-desc-1\") +\r\n                        /*zap ? t(\"first-provider-desc-zap\") : */ t(\"first-provider-desc-2\")\r\n                    }\r\n                    color={/*zap ? red : */ green}\r\n                    style={{ marginTop: Spacing.small }}\r\n                />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst FirstProviderControls = ({ state }: { state: AddLiquidityState }) => {\r\n    const [error, setError] = useState<MetamaskError>({});\r\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\r\n    const fromApproveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\r\n    const toApproveRequired = !isETH(state.toToken) && !state.toTokenAllowed;\r\n    const disabled =\r\n        fromApproveRequired || isEmptyValue(state.fromAmount) || toApproveRequired || isEmptyValue(state.toAmount);\r\n    return (\r\n        <View style={{ marginTop: Spacing.normal }}>\r\n            {isETHWETHPair(state.fromToken, state.toToken) ? (\r\n                <UnsupportedButton state={state} />\r\n            ) : !state.fromToken || !state.toToken || isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount) ? (\r\n                <SupplyButton state={state} onError={setError} disabled={true} />\r\n            ) : state.loading ? (\r\n                <FetchingButton />\r\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\r\n            ) : parseBalance(state.toAmount, state.toToken.decimals).gt(state.toToken.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.toSymbol} />\r\n            ) : (\r\n                <>\r\n                    <ApproveButton\r\n                        token={state.fromToken}\r\n                        spender={ROUTER}\r\n                        onSuccess={() => state.setFromTokenAllowed(true)}\r\n                        onError={setError}\r\n                        hidden={!fromApproveRequired}\r\n                    />\r\n                    <ApproveButton\r\n                        token={state.toToken}\r\n                        spender={ROUTER}\r\n                        onSuccess={() => state.setToTokenAllowed(true)}\r\n                        onError={setError}\r\n                        hidden={!toApproveRequired}\r\n                    />\r\n                    <SupplyButton state={state} onError={setError} disabled={disabled} />\r\n                </>\r\n            )}\r\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst PairPriceInfo = ({ state }: { state: AddLiquidityState }) => {\r\n    const t = useTranslation();\r\n    const { fromAmount, toAmount, lpTokenAmount } = useAmountCalculator(state);\r\n    const disabled = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\r\n    const price =\r\n        state.pair && state.fromToken && state.priceDetermined\r\n            ? state.pair.priceOf(convertToken(state.fromToken)).toFixed(8)\r\n            : undefined;\r\n    const symbol = state.fromSymbol + \"-\" + state.toSymbol;\r\n    return (\r\n        <InfoBox>\r\n            <AmountMeta amount={lpTokenAmount} suffix={symbol} disabled={disabled} />\r\n            <Meta text={fromAmount?.toFixed()} label={state.fromSymbol || t(\"1st-token\")} disabled={disabled} />\r\n            <Meta text={toAmount?.toFixed()} label={state.toSymbol || t(\"2nd-token\")} disabled={disabled} />\r\n            <PriceMeta state={state} price={price} disabled={!state.fromSymbol || !state.toSymbol} />\r\n            <Controls state={state} />\r\n        </InfoBox>\r\n    );\r\n};\r\n\r\nconst useAmountCalculator = (state: AddLiquidityState) => {\r\n    const [amount, setAmount] = useState<string>();\r\n    const [fromAmount, setFromAmount] = useState<TokenAmount>();\r\n    const [toAmount, setToAmount] = useState<TokenAmount>();\r\n    const { calculateAmountOfLPTokenMinted } = useSDK();\r\n    useAsyncEffect(async () => {\r\n        if (\r\n            state.fromToken &&\r\n            state.toToken &&\r\n            state.pair &&\r\n            !isEmptyValue(state.fromAmount) &&\r\n            !isEmptyValue(state.toAmount)\r\n        ) {\r\n            const from = new TokenAmount(\r\n                convertToken(state.fromToken),\r\n                parseBalance(state.fromAmount, state.fromToken.decimals)\r\n                    .div(/*state.mode === \"zapper\" ? 2 : */ 1)\r\n                    .toString()\r\n            );\r\n            setFromAmount(from);\r\n            const to = /*state.mode === \"zapper\"\r\n                    ? state.pair.getOutputAmount(from)[0]\r\n                    : */ convertAmount(\r\n                state.toToken,\r\n                state.toAmount\r\n            );\r\n            setToAmount(to);\r\n            const minted = await calculateAmountOfLPTokenMinted(state.pair, from, to);\r\n            setAmount(minted ? formatBalance(minted, state.pair.liquidityToken.decimals) : undefined);\r\n        }\r\n    }, [state.pair, state.fromAmount, state.toAmount]);\r\n    return { fromAmount, toAmount, lpTokenAmount: amount };\r\n};\r\n\r\nconst PriceMeta = ({ state, price, disabled }) => {\r\n    const t = useTranslation();\r\n    return (\r\n        <Meta\r\n            label={t(\"ratio\")}\r\n            text={price}\r\n            suffix={state.toSymbol + \" = 1 \" + state.fromSymbol}\r\n            disabled={disabled}\r\n        />\r\n    );\r\n};\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\nconst Controls = ({ state }: { state: AddLiquidityState }) => {\r\n    const [error, setError] = useState<MetamaskError>({});\r\n    const { allowed, setAllowed, loading } = useZapTokenAllowance(state.fromToken);\r\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\r\n    /*const zap = state.mode === \"zapper\";\r\n    const fromApproveRequired = !isETH(state.fromToken) && ((zap && !allowed) || (!zap && !state.fromTokenAllowed));\r\n    const toApproveRequired = !isETH(state.toToken) && !zap && !state.toTokenAllowed;*/\r\n    const fromApproveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\r\n    const toApproveRequired = !isETH(state.toToken) && !state.toTokenAllowed;\r\n    const disabled =\r\n            fromApproveRequired ||\r\n            isEmptyValue(state.fromAmount) ||\r\n            /*(!zap && (*/ toApproveRequired ||\r\n            isEmptyValue(state.toAmount) /*))*/;\r\n    return (\r\n        <View style={{ marginTop: Spacing.normal }}>\r\n            {isETHWETHPair(state.fromToken, state.toToken) ? (\r\n                <UnsupportedButton state={state} />\r\n            ) : !state.fromToken || !state.toToken || isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount) ? (\r\n                <SupplyButton state={state} onError={setError} disabled={true} />\r\n            ) : state.loading || loading || !state.pair ? (\r\n                <FetchingButton />\r\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\r\n            ) : state.mode === \"normal\" &&\r\n              parseBalance(state.toAmount, state.toToken.decimals).gt(state.toToken.balance) ? (\r\n                <InsufficientBalanceButton symbol={state.toSymbol} />\r\n            ) : (\r\n                <>\r\n                    <ApproveButton\r\n                        token={state.fromToken}\r\n                        spender={/*zap ? ZAP_IN : */ ROUTER}\r\n                        onSuccess={() => /*zap ? setAllowed(true) : */ state.setFromTokenAllowed(true)}\r\n                        onError={setError}\r\n                        hidden={!fromApproveRequired}\r\n                    />\r\n                    <ApproveButton\r\n                        token={state.toToken}\r\n                        spender={ROUTER}\r\n                        onSuccess={() => state.setToTokenAllowed(true)}\r\n                        onError={setError}\r\n                        hidden={!toApproveRequired}\r\n                    />\r\n                    <SupplyButton state={state} onError={setError} disabled={disabled} />\r\n                </>\r\n            )}\r\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst useZapTokenAllowance = (zapToken?: Token) => {\r\n    const { signer, getTokenAllowance } = useContext(EthersContext);\r\n    const [allowed, setAllowed] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    useAsyncEffect(async () => {\r\n        setAllowed(false);\r\n        if (zapToken && signer) {\r\n            setLoading(true);\r\n            try {\r\n                const minAllowance = ethers.BigNumber.from(2)\r\n                    .pow(96)\r\n                    .sub(1);\r\n                if (isETH(zapToken)) {\r\n                    const fromAllowance = await getTokenAllowance(zapToken.address, ZAP_IN);\r\n                    setAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\r\n                }\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [zapToken, signer]);\r\n    return { allowed, setAllowed, loading };\r\n};\r\n\r\nconst SupplyButton = ({\r\n    state,\r\n    onError,\r\n    disabled\r\n}: {\r\n    state: AddLiquidityState;\r\n    onError: (e) => void;\r\n    disabled: boolean;\r\n}) => {\r\n    const t = useTranslation();\r\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\r\n    const onPress = useCallback(async () => {\r\n        onError({});\r\n        try {\r\n            await state.onAdd();\r\n            goToRemoveLiquidity();\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    }, [state.onAdd, onError]);\r\n    return (\r\n        <Button\r\n            title={t(\"supply-\", {\r\n                symbol: state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\"\r\n            })}\r\n            disabled={disabled}\r\n            loading={state.adding}\r\n            onPress={onPress}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LiquidityScreen;\r\n"],"sourceRoot":""}